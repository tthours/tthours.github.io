<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>tk_group_message</title>
    <link href="/2024/12/24/informationCocoon/tk_group_message/"/>
    <url>/2024/12/24/informationCocoon/tk_group_message/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="2024-12-23"><a href="#2024-12-23" class="headerlink" title="2024.12.23"></a>2024.12.23</h2><h3 id="砂糖橘不能吃的微博解读"><a href="#砂糖橘不能吃的微博解读" class="headerlink" title="砂糖橘不能吃的微博解读"></a>砂糖橘不能吃的微博解读</h3><h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>砂糖橘不能吃的微博</p><h4 id="TK解读"><a href="#TK解读" class="headerlink" title="TK解读"></a>TK解读</h4><p>首先，这条微博是在咋呼。但又不能说他在撒谎。</p><p><img src="/2024/12/24/informationCocoon/tk_group_message/27A87621-AECA-4D9C-8CC1-B3D136380408.png" alt="27A87621-AECA-4D9C-8CC1-B3D136380408"></p><p>他把nature那篇论文和别的一些东西揉到一起说了</p><p>这条微博在引流技巧的使用上是是教科书式的。因为</p><p>nature那篇论文我之前看过，讲的是果糖被转换为几种脂质后，可以被肿瘤细胞利用。</p><p>但如果一上来讲这个，很多人一看就脑子涨。</p><p>所以你们看，这条微博从头到尾没提具体细节，就是果糖、肿瘤。大家都能看懂。</p><p>但光是果糖、肿瘤，也还不够</p><p>但“砂糖橘真的不能再吃了”这就很到位</p><p>果糖、肿瘤这些词对一些人来说也会导致脑子涨。但“砂糖橘真的不能再吃了”这种句子大家都喜闻乐见。</p><p>虽然说使用脱酸剂的是柑橘类水果，但“柑橘类水果”这几个字就不如“沙糖桔”来的厉害。</p><p>所以，那条微博是精心设计的引流文。每个地方都不是随便写的。</p>]]></content>
    
    
    <categories>
      
      <category>infomationCocoon</category>
      
      <category>tk</category>
      
    </categories>
    
    
    <tags>
      
      <tag>infomationCocoon</tag>
      
      <tag>tk</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>tk_wb_blog</title>
    <link href="/2024/12/24/informationCocoon/tk_wb_blog/"/>
    <url>/2024/12/24/informationCocoon/tk_wb_blog/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="2018-1-29"><a href="#2018-1-29" class="headerlink" title="2018.1.29"></a>2018.1.29</h2><p>“保持好奇心”这个说法暗示了好奇心是一种先天的、易失的东西。如果现在有，必须努力保持才不会失去；而如果现在没有，就永远不会有。 </p><p><a href="https://weibo.com/1401527553/4201572646302667">https://weibo.com/1401527553/4201572646302667</a></p><p><img src="/2024/12/24/informationCocoon/tk_wb_blog/image-20241224145809209.png" alt="image-20241224145809209"></p><h2 id="2018-6-17"><a href="#2018-6-17" class="headerlink" title="2018.6.17"></a>2018.6.17</h2><p>兴趣是产生自驱力的源头，但光靠兴趣无法维持自驱力。能为自驱力源源不断提供能量的必然是更强大的东西：好奇心和野心。 </p><p><a href="https://weibo.com/1401527553/4255510397959170">https://weibo.com/1401527553/4255510397959170</a></p><p><img src="/image-20241224150044001.png" alt="image-20241224150044001"></p><h2 id="2022-9-28"><a href="#2022-9-28" class="headerlink" title="2022.9.28"></a>2022.9.28</h2><p>有人想不通贾跃亭为什么到今天还要造车。</p><p>贾跃亭必须造车。普京必须打乌克兰。乾隆必须凑十全武功。这个用咱们过日子人的心去想是想不明白的。</p><p>好大喜功和雄才伟略之间的区别主要是干没干成。没干成就是好大喜功，干成了就是雄才伟略。</p><p>所以前面的例子只能举到乾隆。因为十全武功虽然凑成了，但比较勉强。后世夸得少，笑的多。所以说乾隆好大喜功不会有很多人反对。要是举了秦皇汉武的例子，挨骂的就是我了。我们从来不用“好大喜功”形容成功者。</p><p>其实，如果一个人不“好大喜功”，或者用现代词儿说叫“强烈的成就动机”，又怎么能做成大事呢？靠狗屎运吗？所以，单单“好大喜功”其实没什么不对。成功人士都好大喜功。</p><p>当然，说“好大喜功”等于“雄才伟略”其实也不对。“好大喜功”只对应了“伟略”。有伟略，还得有雄才。那么，即便最后没成，大家也认为是时也运也命也，不至于给个好大喜功的评价。诸葛亮五次北伐都没搞成，后人也不说他好大喜功，只说他鞠躬尽瘁。</p><p><img src="/image-20241224150406643.png" alt="image-20241224150406643"></p><p><a href="https://weibo.com/6827625527/4818648269064364">https://weibo.com/6827625527/4818648269064364</a></p><h2 id="2023-4-12"><a href="#2023-4-12" class="headerlink" title="2023.4.12"></a>2023.4.12</h2><p><img src="/007s41inly1hwvrayrmu0j30u011i7aq.jpg" alt="img"></p><h2 id="2024-5-7"><a href="#2024-5-7" class="headerlink" title="2024.5.7"></a>2024.5.7</h2><p><a href="https://weibo.com/6827625527/5031372701569943">https://weibo.com/6827625527/5031372701569943</a></p><p>我所在的某个群，里面主要是文艺工作者和科技工作者，以文艺工作者为主。搞书画的，搞雕塑的，搞音乐的，搞建筑的，搞时装的，主持人，作家，导演，啥都有。科技工作者从院士、科技企业家到我这样的小虾米，也是啥都有。</p><p>虽然这种群里大家说话不会太直接，不过还是可以感觉到气氛和社会主流思潮不太一样。他们就像所有时间所有空间的大多数艺术家和知识分子，真实的一面不怎么讨人喜欢。或者说，“脱离群众”。</p><p>有人问一个导演：你的那个作品在国内能上吗？导演说：等通知吧。</p><p><img src="/image-20241224112629346.png" alt="image-20241224112629346"></p><p>。。。。。</p><p>。。。。。</p><h2 id="2024-12-24"><a href="#2024-12-24" class="headerlink" title="2024.12.24"></a>2024.12.24</h2><p>美国购物网站上有些商品页面能看到这样的免责声明 :</p><p>“本产品含有加利福尼亚州已知会导致癌症和出生缺陷或其他生殖危害的化学物质。”</p><p>这是加州 65 号提案也就是《1986 年安全饮用水和有毒物质执行法案》的要求。好在国内知道的人不多，要不然用这种当证据，能把一大堆产品都打成沙糖桔。</p><p><img src="/image-20241224101623194.png" alt="image-20241224101623194"></p>]]></content>
    
    
    <categories>
      
      <category>infomationCocoon</category>
      
      <category>tk</category>
      
    </categories>
    
    
    <tags>
      
      <tag>infomationCocoon</tag>
      
      <tag>tk</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>life_yl</title>
    <link href="/2024/12/24/life/life_yl/"/>
    <url>/2024/12/24/life/life_yl/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h3 id="流感"><a href="#流感" class="headerlink" title="流感"></a>流感</h3><p>罗氏出品-玛巴洛沙韦干混悬剂：5 岁以上都可以用</p><p>罗氏出品-速福达</p><p>来自TK茧房群</p>]]></content>
    
    
    <categories>
      
      <category>life</category>
      
      <category>yiliao</category>
      
    </categories>
    
    
    <tags>
      
      <tag>life</tag>
      
      <tag>yiliao</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>cissp-实现安全治理的原则和策略</title>
    <link href="/2024/12/24/security/seccert/cissp/cissp-%E5%AE%9E%E7%8E%B0%E5%AE%89%E5%85%A8%E6%B2%BB%E7%90%86%E7%9A%84%E5%8E%9F%E5%88%99%E5%92%8C%E7%AD%96%E7%95%A5/"/>
    <url>/2024/12/24/security/seccert/cissp/cissp-%E5%AE%9E%E7%8E%B0%E5%AE%89%E5%85%A8%E6%B2%BB%E7%90%86%E7%9A%84%E5%8E%9F%E5%88%99%E5%92%8C%E7%AD%96%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h3 id="评估和应用安全治理原则"><a href="#评估和应用安全治理原则" class="headerlink" title="评估和应用安全治理原则"></a>评估和应用安全治理原则</h3><h4 id="第三方治理"><a href="#第三方治理" class="headerlink" title="第三方治理"></a>第三方治理</h4><p>一方面可能是由法律、法规、行业标准、合同义务或许可要求强制执行的外部实体监督系统</p><p>另一方是组织对所依赖的第三方应用进行安全监督，例如外包</p><p>侧重点在于验证其是否符合声明的安全目标、需求、法规和合同义务</p><h4 id="文件审查"><a href="#文件审查" class="headerlink" title="文件审查"></a>文件审查</h4><p>文件审查是查看交换材料并根据标准和期望对其进行验证的过程。</p><p>通常发生在现场检查之前，如果所交换的文件充分并且满足期望（或至少满足需求），那么现场审查将集中审查其与所声明文件是否相符；如果所交换的文件不完整、不准确或不充分，现场审查将推迟到文件更新或更正后进行。</p><p>如果文件不合规，那现场也可能不合规。</p><p>风险管理、风险评估和风险处置是执行流程&#x2F;策略评审时所使用的方法与技术。</p><h3 id="管理安全功能"><a href="#管理安全功能" class="headerlink" title="管理安全功能"></a>管理安全功能</h3><p>安全功能是业务运营的一个方面，专注于随着时间的推移评估和改进安全性的任务。</p><p>通过执行风险评估以推动安全策略的行为是有关安全功能管理的最清晰与最直接的示例。</p><p>安全必须是可衡量的。</p><p>可衡量的安全意味着安全机制的各个方面都发挥作用，提供明显的收益，并有一个或多个可以进行记录与分析的指标。</p><p>当实施安全对策或保护措施后，安全指标应显示出意外事件数量的减少或尝试检测事件数量的增加。</p><p>测量和评估安全指标的行为可以评估安全计划的完整性和有效性。</p><p>还应该包括根据通用安全准则对安全计划进行测量，并跟踪其控制措施的成功与否。</p><h4 id="与业务战略、目标、使命和宗旨相一致的安全功能"><a href="#与业务战略、目标、使命和宗旨相一致的安全功能" class="headerlink" title="与业务战略、目标、使命和宗旨相一致的安全功能"></a>与业务战略、目标、使命和宗旨相一致的安全功能</h4><p>安全管理计划确保正确地创建、执行和实施安全策略。</p><p>最能有效处理安全管理计划的一个方法是自上而下方法。</p><p>1、上层、高级或管理部门负责启动和定义组织的策略。安全策略为组织架构内的各个级别提供指导。</p><p>2、中层管理人员负责将安全策略落实到标准、基线、指导方针和程序。</p><p>3、操作管理人员或安全专业人员必须实现安全管理文档中规定的配置。</p><p>4、最终用户必须遵守组织的所有安全策略。</p><p>安全管理计划的内容包括：定义安全角色，规定如何管理安全、由谁负责安全以及如何检验安全的有效性，制定安全策略，执行风险分析，要求对员工进行安全教育。</p><p>安全管理计划团队应制定战略计划、战术计划和操作计划三种类型的计划。</p><p>1、战略计划（strategic plan）</p><p>相对稳定的长期计划，定义组织的安全目的和安全功能。</p><p>有效期大约是5年。</p><p>也被视为愿景规划</p><p>讨论了未来的长期目标和愿景，需要包含风险评估。</p><p>2、战术计划（tactical plan）</p><p>中期计划</p><p>为战略计划中设定的目标提供更多细节，该计划也可根据不可预测的事件临时制定。</p><p>有效期大约是1年左右。</p><p>通常规定和安排实现组织目标所需的任务。</p><p>可以包含项目计划、收购计划、招聘计划、预算计划、维护计划、支持计划和系统开发计划。</p><p>3、操作计划（operational plan）</p><p>短期、高度详细的计划</p><p>在战略计划和战术计划的基础上制定</p><p>短期内有效或有用</p><p>必须经常更新（如每月或每季度），以保证其与战术计划的一致性。</p><p>阐明了如何实现组织的各种目标，包括资源分配、预算需求、人员分配、进度安排与细化或执行程序。</p><p>包含执行流程与组织安全策略的合规性细节。</p><p>可以包含培训计划、系统部署计划和产品设计计划。</p><p>安全是一个持续的过程。</p><p>安全管理计划的活动可能有一个确定的起点，但其任务和工作永远无法彻底完成或实现。</p><p>有效的安全计划关注具体和可实现的目标、预测变化和潜在问题，并充当整个组织决策的基础。</p><p>安全文档应该是具体的、定义完善的和明确说明的。</p>]]></content>
    
    
    <categories>
      
      <category>security</category>
      
      <category>seccert</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>seccert</tag>
      
      <tag>cissp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>tthours</title>
    <link href="/2024/12/16/tthours/"/>
    <url>/2024/12/16/tthours/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p><img src="/image-20241224173609469.png" alt="image-20241224173609469"></p>]]></content>
    
    
    <categories>
      
      <category>yunwei</category>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>yunwei</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>cloudsec_base</title>
    <link href="/2024/12/16/security/cloudsec/cloudsec_base/"/>
    <url>/2024/12/16/security/cloudsec/cloudsec_base/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="云原生基础概念"><a href="#云原生基础概念" class="headerlink" title="云原生基础概念"></a>云原生基础概念</h1><h2 id="qemu-kvm"><a href="#qemu-kvm" class="headerlink" title="qemu-kvm"></a>qemu-kvm</h2><h3 id="qemu"><a href="#qemu" class="headerlink" title="qemu"></a>qemu</h3><h4 id="qemu原理"><a href="#qemu原理" class="headerlink" title="qemu原理"></a>qemu原理</h4><p>qemu 是通过软件实现的虚拟化模拟器，可以模拟大多数硬件设备，可以通过 qemu 模拟虚拟机，模拟出来的虚拟机与之交互的硬件就是 qemu 模拟出来的硬件，qemu 模拟的硬件将从虚拟机接收过来的指令转译给真正的硬件。</p><h4 id="qemu优势"><a href="#qemu优势" class="headerlink" title="qemu优势"></a>qemu优势</h4><h4 id="qemu劣势"><a href="#qemu劣势" class="headerlink" title="qemu劣势"></a>qemu劣势</h4><p>由于 qemu 是基于软件的，指令需要 qemu 进行转译，所以速度会相对较慢一些。</p><h3 id="KVM"><a href="#KVM" class="headerlink" title="KVM"></a>KVM</h3><p>kernel-based Virtual Machine</p><h4 id="KVM原理"><a href="#KVM原理" class="headerlink" title="KVM原理"></a>KVM原理</h4><p>硬件辅助的虚拟化技术。</p><p>kvm 是 linux 的内核模块,用于模拟 CPU 和内存。</p><h4 id="KVM优势"><a href="#KVM优势" class="headerlink" title="KVM优势"></a>KVM优势</h4><p>由于是基于linux内核的，所以模拟出来的虚拟机的 CPU 指令会直接和真正的硬件进行交互，因此速度会更加快速</p><h4 id="KVM劣势"><a href="#KVM劣势" class="headerlink" title="KVM劣势"></a>KVM劣势</h4><h3 id="qemu-kvm-1"><a href="#qemu-kvm-1" class="headerlink" title="qemu-kvm"></a>qemu-kvm</h3><h4 id="qemu-kvm原理"><a href="#qemu-kvm原理" class="headerlink" title="qemu-kvm原理"></a>qemu-kvm原理</h4><p>由于 qemu 和 kvm 单独使用都会存在一些不满意的地方，所以 qemu 将 kvm 整合，使用 ioctl 调用 &#x2F;dev&#x2F;kvm 接口，将相关 CPU 的指令直接交由 内核进行处理。</p><p>kvm 模拟 CPU 和内存，实现CPU和内存的虚拟化；qemu 模拟 IO 设备，实现 IO 的虚拟化。通过两者实现服务器的虚拟化，所以就是 qemu-kvm。</p><h2 id="容器技术"><a href="#容器技术" class="headerlink" title="容器技术"></a>容器技术</h2><h3 id="容器和虚拟化"><a href="#容器和虚拟化" class="headerlink" title="容器和虚拟化"></a>容器和虚拟化</h3><p><strong>虚拟化：Vritualization</strong></p><p>通常在hypervisor层实现对硬件资源的虚拟化，hypervisor为虚拟机提供了虚拟的运行平台，管理虚拟机的操作系统的运行，每个虚拟机都有自己的操作系统、系统库和应用</p><p><strong>容器：Container</strong></p><p>没有hypervisor层，每个容器是与主机共享硬件资源及操作系统</p><p>在操作系统层面实现了对计算机系统资源的虚拟化，在操作系统中对CPU、内存和文件系统等资源的隔离划分和控制，实现进程之间透明的资源使用。</p><h3 id="容器镜像"><a href="#容器镜像" class="headerlink" title="容器镜像"></a>容器镜像</h3><p>镜像是容器运行的基础，容器引擎可使用不同的镜像启动相应的容器</p><p>虚拟机镜像是将完整的操作系统封装成一个镜像文件</p><p>容器镜像不是一个文件，是分层存储的文件系统，所以如果对镜像内某个文件修改时，只是修改的最上方的读写层，不会覆盖下层已有的文件系统</p><h3 id="容器存储"><a href="#容器存储" class="headerlink" title="容器存储"></a>容器存储</h3><h4 id="镜像元数据"><a href="#镜像元数据" class="headerlink" title="镜像元数据"></a>镜像元数据</h4><p>Linux系统中docker的数据默认存储在&#x2F;var&#x2F;lib&#x2F;docker中</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs tap">└─<span class="hljs-comment"># ls -l /var/lib/docker</span><br>总用量 44<br>drwx--x--x <span class="hljs-number"> 4 </span>root root<span class="hljs-number"> 4096 </span> 4月<span class="hljs-number"> 22 </span>19:08 buildkit<br>drwx--x--- <span class="hljs-number"> 3 </span>root root<span class="hljs-number"> 4096 </span> 7月 <span class="hljs-number"> 5 </span>09:00 containers<br>drwx------ <span class="hljs-number"> 3 </span>root root<span class="hljs-number"> 4096 </span> 4月<span class="hljs-number"> 22 </span>19:08 image<br>drwxr-x--- <span class="hljs-number"> 3 </span>root root<span class="hljs-number"> 4096 </span> 4月<span class="hljs-number"> 22 </span>19:08 network<br>drwx--x---<span class="hljs-number"> 26 </span>root root<span class="hljs-number"> 4096 </span> 7月 <span class="hljs-number"> 5 </span>09:00 overlay2<br>drwx------ <span class="hljs-number"> 4 </span>root root<span class="hljs-number"> 4096 </span> 4月<span class="hljs-number"> 22 </span>19:08 plugins<br>drwx------ <span class="hljs-number"> 2 </span>root root<span class="hljs-number"> 4096 </span> 7月 <span class="hljs-number"> 3 </span>11:05 runtimes<br>drwx------ <span class="hljs-number"> 2 </span>root root<span class="hljs-number"> 4096 </span> 4月<span class="hljs-number"> 22 </span>19:08 swarm<br>drwx------ <span class="hljs-number"> 2 </span>root root<span class="hljs-number"> 4096 </span> 7月 <span class="hljs-number"> 4 </span>09:33 tmp<br>drwx------ <span class="hljs-number"> 2 </span>root root<span class="hljs-number"> 4096 </span> 4月<span class="hljs-number"> 22 </span>19:08 trust<br>drwx-----x<span class="hljs-number"> 17 </span>root root<span class="hljs-number"> 4096 </span> 7月 <span class="hljs-number"> 5 </span>09:00 volumes<br><br></code></pre></td></tr></table></figure><p>基于不同的系统又有不同的存储驱动和不同的目录结构</p><p>镜像每一层的ID是该文件内容的散列校验值，作为该层的唯一标识。</p><p>镜像索引方式：</p><p>读取镜像的manifests文件</p><p>获取config的sha256码</p><p>得到镜像config文件</p><p>遍历manifests文件中的所有层（layer）</p><p>根据sha256码在本地查找</p><p>拼出完整镜像</p><h4 id="存储驱动"><a href="#存储驱动" class="headerlink" title="存储驱动"></a>存储驱动</h4><p>Docker 依靠驱动技术管理镜像和运行它们的容器间的存储和交互</p><p>当前支持的存储驱动</p><p>overlay2、aufs、fuse-overlays、devicemapper、btrfs、zfs、vfs</p><h4 id="数据卷"><a href="#数据卷" class="headerlink" title="数据卷"></a>数据卷</h4><p>docker采用数据卷（Volume）的形式向容器提供持久化存储</p><h3 id="容器网络"><a href="#容器网络" class="headerlink" title="容器网络"></a>容器网络</h3><p>容器网络目前可分为主机网络和集群网络</p><p>主机网络</p><p>以Docker为例，分为 None 网络模式、Bridge 网络模式、Host 网络模式和 Container 网络模式</p><p>集群网络以 Kubernetes 为例</p><p>Pod 为 Kubernetes 应用运行的基本单元，每个 Pod 中包含一个或多个相关的容器，多个容器运行在同一主机中，并且共享相同的网络命名空间和相同的Linux协议栈</p><p>集群网络基于Pod主要涉及以下三种通信</p><p>同一Pod内，容器和容器之间的通信</p><p>同一主机内不同Pod之间的通信</p><p>跨主机Pod之间的通信</p><h3 id="容器运行时"><a href="#容器运行时" class="headerlink" title="容器运行时"></a>容器运行时</h3><p>容器运行时负责管理容器运行的整个生命周期，包括但不限于指定容器镜像格式、构建镜像、上传和拉取镜像、管理镜像、管理容器实例、运行容器等</p><p>OCI（Open Container Initiative）开放容器标准</p><p>包含容器运行时标准和容器镜像标准</p><p>容器运行时标准主要包含 runC、Rocket、Kata Containers、gVisor等</p><p>CRI（Container Runtime Interface）容器运行时接口</p><p>当前支持的CRI运行时包括 Docker、Containerd、CRI-O</p><h2 id="容器编排"><a href="#容器编排" class="headerlink" title="容器编排"></a>容器编排</h2><p>关注度较高的容器编排平台</p><p>Kubernetes </p><p>apache mesos</p><p>docker Swarm</p><p>OpenShift</p><p>Rancher</p><h2 id="微服务"><a href="#微服务" class="headerlink" title="微服务"></a>微服务</h2><p>服务之间通常通过 RESTful 通信</p><h2 id="服务网格"><a href="#服务网格" class="headerlink" title="服务网格"></a>服务网格</h2><p>Service Mesh</p><p>通常通过一组轻量级网络代理实现，这些代理与应用程序一起部署，而无须感知应用程序本身</p><p>Sidecar 运行在服务旁，并对服务透明。由于所有通过服务的流量均会经过Sidecar，因此Sidecar可实现流量控制功能，如服务发现、负载均衡、智能路由、故障注入、熔断器、TLS终止等</p><p>Istio为代表</p><h2 id="Serverless"><a href="#Serverless" class="headerlink" title="Serverless"></a>Serverless</h2><p>Serverless可在不考虑服务器的情况下构建并运行应用程序和服务，也就是开放者只负责开发，服务器均交给第三方管理</p><p>两种实现方式</p><p>BaaS（Backend as a Service，后端即服务）</p><p>FaaS（Functions as a Service，函数即服务），主要实现方式</p><p>典型代表</p><p>AWS Lamba</p><p>阿里云的函数计算</p><p>Kubernetes的kubeless</p><p>Apache OpenWhisk</p><h1 id="云原生安全架构"><a href="#云原生安全架构" class="headerlink" title="云原生安全架构"></a>云原生安全架构</h1><h2 id="容器安全"><a href="#容器安全" class="headerlink" title="容器安全"></a>容器安全</h2><p>关键字：容器逃逸</p><h3 id="容器基础设施安全"><a href="#容器基础设施安全" class="headerlink" title="容器基础设施安全"></a>容器基础设施安全</h3><p>主机安全配置是否会影响到容器</p><p>主机恶意进程和安全漏洞是否会影响到容器</p><p>容器内进程是否可以利用主机上的安全漏洞</p><h3 id="容器镜像安全"><a href="#容器镜像安全" class="headerlink" title="容器镜像安全"></a>容器镜像安全</h3><p>镜像中的软件是否存在安全漏洞</p><p>镜像构建过程中是否存在安全风险</p><p>镜像传输过程中是否被恶意篡改</p><h3 id="容器运行安全"><a href="#容器运行安全" class="headerlink" title="容器运行安全"></a>容器运行安全</h3><p>运行的容器间的隔离是否充分</p><p>容器间的通信是否安全</p><p>容器内的恶意程序是否会影响到主机或者其他容器</p><p>容器的资源使用情况是否安全</p><h3 id="容器编排安全"><a href="#容器编排安全" class="headerlink" title="容器编排安全"></a>容器编排安全</h3><p>Docker自身的安全性</p><p>service mesh&#x2F;serverless对容器安全的影响</p><p>容器中安全密钥的管理和传统环境的不同</p><p>容器化的数据隐私保护与传统的数据隐私保护是否一致</p><h3 id="容器应用安全"><a href="#容器应用安全" class="headerlink" title="容器应用安全"></a>容器应用安全</h3><h2 id="安全能力架构"><a href="#安全能力架构" class="headerlink" title="安全能力架构"></a>安全能力架构</h2><h3 id="物理安全"><a href="#物理安全" class="headerlink" title="物理安全"></a>物理安全</h3><h3 id="系统安全"><a href="#系统安全" class="headerlink" title="系统安全"></a>系统安全</h3><p>系统完整性保护</p><p>OS&#x2F;DB&#x2F;WEB加固</p><p>安全补丁</p><p>病毒防护</p><h3 id="网络安全"><a href="#网络安全" class="headerlink" title="网络安全"></a>网络安全</h3><p>防火墙</p><p>IDS&#x2F;IPS</p><p>Anti-DDOS</p><p>僵尸网络&#x2F;蠕虫检测</p><p>网络平面隔离</p><p>传输安全（SSL&#x2F;VPN)</p><h3 id="管理安全"><a href="#管理安全" class="headerlink" title="管理安全"></a>管理安全</h3><p>多因素接入认证</p><p>集中用户管理和认证</p><p>集中日志审计</p><p>镜像签名和完整性保护</p><h3 id="虚拟化安全"><a href="#虚拟化安全" class="headerlink" title="虚拟化安全"></a>虚拟化安全</h3><p>虚拟机隔离</p><p>虚拟防火墙</p><p>恶意VM预防</p><h3 id="数据安全"><a href="#数据安全" class="headerlink" title="数据安全"></a>数据安全</h3><p>数据隔离</p><p>数据访问控制</p><p>剩余信息保护</p><p>快照加密</p><p>用户数据加密存储</p><p>存储位置要求</p><h1 id="元原生安全风险"><a href="#元原生安全风险" class="headerlink" title="元原生安全风险"></a>元原生安全风险</h1><h2 id="容器基础设施的风险分析"><a href="#容器基础设施的风险分析" class="headerlink" title="容器基础设施的风险分析"></a>容器基础设施的风险分析</h2><h3 id="1、容器基础设施面临的风险"><a href="#1、容器基础设施面临的风险" class="headerlink" title="1、容器基础设施面临的风险"></a>1、容器基础设施面临的风险</h3><h4 id="1-1、容器镜像存在的风险"><a href="#1-1、容器镜像存在的风险" class="headerlink" title="1.1、容器镜像存在的风险"></a>1.1、容器镜像存在的风险</h4><h5 id="1-1-1、不安全的第三方组件"><a href="#1-1-1、不安全的第三方组件" class="headerlink" title="1.1.1、不安全的第三方组件"></a>1.1.1、不安全的第三方组件</h5><p>基于原生镜像的基础上进行二次开发，导致原有镜像中存在非必须的组件，且这些组件存在风险。</p><h5 id="1-1-2、恶意镜像"><a href="#1-1-2、恶意镜像" class="headerlink" title="1.1.2、恶意镜像"></a>1.1.2、恶意镜像</h5><p>公共镜像存在引入恶意镜像的风险</p><h5 id="1-1-3、敏感信息泄露"><a href="#1-1-3、敏感信息泄露" class="headerlink" title="1.1.3、敏感信息泄露"></a>1.1.3、敏感信息泄露</h5><p>为开发调试的便捷性，存在将敏感信息写入代码或配置文件，构成镜像时，敏感信息一并打包到，传输的外部镜像仓库，导致信息泄露。</p><h4 id="1-2、活动容器存在的风险"><a href="#1-2、活动容器存在的风险" class="headerlink" title="1.2、活动容器存在的风险"></a>1.2、活动容器存在的风险</h4><h5 id="1-2-1、不安全的容器应用"><a href="#1-2-1、不安全的容器应用" class="headerlink" title="1.2.1、不安全的容器应用"></a>1.2.1、不安全的容器应用</h5><p>如果启动时配置了端口映射，容器应用外部可访问，传统业务代码的安全风险依然存在。</p><h5 id="1-2-2、不受限制的资源共享"><a href="#1-2-2、不受限制的资源共享" class="headerlink" title="1.2.2、不受限制的资源共享"></a>1.2.2、不受限制的资源共享</h5><p>默认情况下，Docker不会对容器的资源使用进行限制，也就是容器可以无限制使用宿主机资源。存在容器耗尽宿主机资源的风险。</p><h5 id="1-2-3、不安全的配置与挂载"><a href="#1-2-3、不安全的配置与挂载" class="headerlink" title="1.2.3、不安全的配置与挂载"></a>1.2.3、不安全的配置与挂载</h5><p>配置与挂载：容器在启动时带有的配置选项和挂载选项</p><p><strong>容器核心隔离机制</strong>：</p><ul><li>Linux命名空间机制：在文件系统、网络、进程、进程间通信和主机名等方面实现隔离。</li><li>cgroups机制：在CPU、内存和硬盘等资源方面实现隔离。</li><li>Capabilities、Seccomp和AppArmor等机制：限制容器内进程间的权限和系统调用访问能力</li></ul><p><strong>打破隔离方式</strong>：</p><ul><li>配置 –privileged 选项，容器将不受 Seccomp等安全机制的限制，容器内root权限将变得和宿主机上的root一样</li><li>配置 –net&#x3D;host，容器将与宿主机处于同一网络命令空间（打破网络隔离）</li><li>配置 –pid&#x3D;host，容器将与宿主机处于同一进程命令空间（打破进程隔离）</li><li>执行挂载 –volume &#x2F;:&#x2F;host，宿主机根目录将被挂载到容器内部（打破文件系统隔离）</li></ul><p>1.3、容器网络存在的风险</p><h3 id="3-4、运行时容器的攻击案例"><a href="#3-4、运行时容器的攻击案例" class="headerlink" title="3.4、运行时容器的攻击案例"></a>3.4、运行时容器的攻击案例</h3><h4 id="攻击分类"><a href="#攻击分类" class="headerlink" title="攻击分类"></a>攻击分类</h4><p>1）主要影响机密性、完整性的：通常是获取目标系统控制权、窃取或修改数据等。</p><p>2）主要影响可用性的：通常是对目标系统信息资源的耗尽型攻击。</p><h4 id="3-4-1、容器逃逸"><a href="#3-4-1、容器逃逸" class="headerlink" title="3.4.1、容器逃逸"></a>3.4.1、容器逃逸</h4><h5 id="3-4-1-1、不安全配置导致的容器逃逸"><a href="#3-4-1-1、不安全配置导致的容器逃逸" class="headerlink" title="3.4.1.1、不安全配置导致的容器逃逸"></a>3.4.1.1、不安全配置导致的容器逃逸</h5><p>docker 已经将容器运行时的Capabilities黑名单机制改为如今的默认禁止所有Capabilities，再以白名单方式赋予容器运行所需的最小权限。</p><p>Docker默认赋予容器近40项权限中的14项</p><p>CAP_CHOWN</p><p>CAP_DAC_OVERRIDE</p><p>CAP_FSETID</p><p>CAP_FOWNER<br>CAP_MKNOD<br>CAP_NET_RAW<br>CAP_SETGID<br>CAP_SETUID<br>CAP_SETFCAP</p><p>CAP_SETPCAP</p><p>CAP_NET_BIND_SERVICE</p><p>CAP_SYS_CHROOT<br>CAP_KILL<br>CAP_AUDIT_WAITE</p><p><strong>–privileged  特权模式运行容器</strong></p><p>特权容器允许访问宿主机上的所有设备，同时修改AppArmor或SELinux的配置，使容器拥有于那些直接运行在宿主机上的进程几乎相同的权限</p><p>创建非特权容器</p><p>docker run -itd –name non_privileged_centos centos &#x2F;bin&#x2F;bash</p><p>root@VM-8-5-ubuntu:~# docker run -itd –name non_privileged_centos centos &#x2F;bin&#x2F;bash<br>f2fa3a889b7d43d5bc371bf02d62b360ffa9cce7737eb6a4cfae60864be5625e</p><p>创建特权容器</p><p>docker run -t -i -d –privileged  –name privileged_centos centos &#x2F;bin&#x2F;bash</p><p>root@VM-8-5-ubuntu:~# docker run -t -i -d –privileged  –name privileged_centos centos &#x2F;bin&#x2F;bash<br>7ef25d5d2b4605bef917323d591f9596b95c6262268fda77edac4f13322de2f5</p><p>root@VM-8-5-ubuntu:~# docker run -itd –name privileged busybox –privileged<br>e5b459ca0fe56484dee600d919f1fafde42631923fa326393d60c1692fea1d27<br>docker: Error response from daemon: failed to create shim: OCI runtime create failed: container_linux.go:380: starting container process caused: exec: “–privileged”: executable file not found in $PATH: unknown.</p><p>docker exec id fdisk -l</p><p>docker exec id fdisk -l | tail -n 2</p><p>ps </p><p>procfs</p><h5 id="3-4-1-2-不安全挂载导致的容器逃逸"><a href="#3-4-1-2-不安全挂载导致的容器逃逸" class="headerlink" title="3.4.1.2 不安全挂载导致的容器逃逸"></a>3.4.1.2 不安全挂载导致的容器逃逸</h5><p>将宿主机敏感文件或敏感目录挂在到不可控的容器中，会存在安全问题</p><h6 id="将-Docker-Socket-挂载到容器内"><a href="#将-Docker-Socket-挂载到容器内" class="headerlink" title="将 Docker Socket 挂载到容器内"></a>将 Docker Socket 挂载到容器内</h6><p>Docker Socket 是 Docker  守护进程监听的UNIX套接字，用来与守护进程通信-查询信息或下发命令，如果将该套接字文件&#x2F;var&#x2F;run&#x2F;docker.sock挂载到攻击者可控容器，存在被逃逸的风险</p><h6 id="挂载宿主机-profs"><a href="#挂载宿主机-profs" class="headerlink" title="挂载宿主机 profs"></a>挂载宿主机 profs</h6><h5 id="3-4-1-3-相关程序漏洞导致的容器逃逸"><a href="#3-4-1-3-相关程序漏洞导致的容器逃逸" class="headerlink" title="3.4.1.3 相关程序漏洞导致的容器逃逸"></a>3.4.1.3 相关程序漏洞导致的容器逃逸</h5><p>CVE-2019-5736 覆盖宿主机上的runC文件</p><h5 id="3-4-1-4-内核漏洞导致的容器逃逸"><a href="#3-4-1-4-内核漏洞导致的容器逃逸" class="headerlink" title="3.4.1.4 内核漏洞导致的容器逃逸"></a>3.4.1.4 内核漏洞导致的容器逃逸</h5><p>CVE-2016-5195 内存页的写时复制问题</p><h4 id="3-4-2-安全容器逃逸"><a href="#3-4-2-安全容器逃逸" class="headerlink" title="3.4.2 安全容器逃逸"></a>3.4.2 安全容器逃逸</h4><h4 id="3-4-3-资源耗尽型攻击"><a href="#3-4-3-资源耗尽型攻击" class="headerlink" title="3.4.3 资源耗尽型攻击"></a>3.4.3 资源耗尽型攻击</h4><p>容器运行时默认情况下未对容器内进程在资源使用上做任何限制，以Pod为基本单位的容器编排管理系统在默认情况下也未对用户创建的Pod做任何CPU、内容使用限制</p><h5 id="3-4-3-1-CPU资源耗尽攻击"><a href="#3-4-3-1-CPU资源耗尽攻击" class="headerlink" title="3.4.3.1 CPU资源耗尽攻击"></a>3.4.3.1 CPU资源耗尽攻击</h5><h2 id="容器编排平台的风险分析"><a href="#容器编排平台的风险分析" class="headerlink" title="容器编排平台的风险分析"></a>容器编排平台的风险分析</h2><h3 id="容器编排平台面临的风险"><a href="#容器编排平台面临的风险" class="headerlink" title="容器编排平台面临的风险"></a>容器编排平台面临的风险</h3><h4 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h4><p>CNI插件Flannel：Pod之间通信的工具</p><p>kube-system命名空间</p><p>Flannel Pod</p><p>kube-proxy Pod</p><p>Kubernetes集群中需要以YAML声明式文件的形式来创建Pod，Pod为逻辑概念，实际由一个或多个容器组成。</p><p>对容器的配置须以Pod的配置方式下发。</p><h4 id="4-1-1-容器基础设施存在的风险"><a href="#4-1-1-容器基础设施存在的风险" class="headerlink" title="4.1.1 容器基础设施存在的风险"></a>4.1.1 容器基础设施存在的风险</h4><p>kubernetes提供了ConfigMaps和Secrets两种资源来单独存储常规配置和敏感信息</p><h4 id="4-1-2-Kubernetes-组件接口存在的风险"><a href="#4-1-2-Kubernetes-组件接口存在的风险" class="headerlink" title="4.1.2 Kubernetes 组件接口存在的风险"></a>4.1.2 Kubernetes 组件接口存在的风险</h4><p>Kubernetes中绝大多数组件以基于HTTP或HTTPS的API形式提供服务</p><p>常见服务及端口信息</p><table><thead><tr><th>组件</th><th>默认端口</th><th>说明</th></tr></thead><tbody><tr><td>API Server</td><td>6443</td><td>基于HTTPS的安全端口</td></tr><tr><td>API Server</td><td>8080</td><td>不安全的HTTP端口，不建议启用</td></tr><tr><td>Kubelet</td><td>10248</td><td>用于检查kubelet健康状态的HTTP端口</td></tr><tr><td>Kubelet</td><td>10250</td><td>面向API Server提供服务的HTTPS端口</td></tr><tr><td>Dashboard</td><td>8001</td><td>提供HTTP服务的端口</td></tr><tr><td>etcd</td><td>2379</td><td>客户端与服务端之间通信的接口</td></tr><tr><td>etcd</td><td>2380</td><td>不同服务端实例之间通信的端口</td></tr></tbody></table><p>1、API Server</p><p>默认情况下，API Server在8080和6443两个端口提供服务</p><p>8080端口提供没有TLS加密的HTTP服务，所有到达端口的请求将绕过所有认证和授权模块（但是任然会被准入控制模块处理？？？）</p><p>6443端口提供TLS加密的HTTPS服务，到达的请求必须通过认证和授权机制才能被成功处理</p><p>2、Dashboard</p><p>按照官方文档部署的K8s需要经过 kubectl proxy 才可以通过本地8001端口访问dashboard，但是如果直接将dashboard映射到宿主机节点或者在执行 kubectl proxy是使用额外的参数（kubectl proxy –address 0.0.0.0 –accept-hosts&#x3D;’^*$’），会出现只要可以访问到宿主机的都可以访问到dashboard</p><p>默认情况下，dashboard是需要登录认证，但是如果在dashboard启动参数中添加 –enable-skip-login选项，则就可以通过点击dashboard界面的“跳过”来绕过认证</p><p>3、Kubelet</p><h2 id="云原生应用的风险分析"><a href="#云原生应用的风险分析" class="headerlink" title="云原生应用的风险分析"></a>云原生应用的风险分析</h2><p>5.3 云原生应用的新风险分析</p><p>5.3.1 数据泄露风险</p><p>1）应用漏洞</p><p>API造成的数据泄露风险</p><p>2）密钥不规范管理</p><p>硬编码</p><p>解决方案：</p><p>代码与配置可分离</p><p>配置支持分布式</p><p>配置实时可更新</p><p>配置可统一治理</p><p>3）应用间通信未加密</p><p>gRPC协议，默认不加密</p><p>5.3.2 未授权访问的风险</p>]]></content>
    
    
    <categories>
      
      <category>security</category>
      
      <category>cloudsec</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>cloudsec</tag>
      
      <tag>base</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo_images</title>
    <link href="/2024/12/16/yunwei/hexo/hexo_images/"/>
    <url>/2024/12/16/yunwei/hexo/hexo_images/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="hexo-typora"><a href="#hexo-typora" class="headerlink" title="hexo+typora"></a>hexo+typora</h2><h3 id="设置typora"><a href="#设置typora" class="headerlink" title="设置typora"></a>设置typora</h3><p>在设置-&gt;图像设置</p><p><img src="/2024/12/16/yunwei/hexo/hexo_images/image-20221230182231829.png" alt="image-20221230182231829"></p><h3 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h3><p>_config.yml中配置，会在使用 hexo new post_name 创建新文档时，在当前目录创建和文档名相同的文件夹，用于存储对应文档的图像</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-params">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>按照上述设置后，typora可以限制图像，但是hexo无法显示图像</p><h3 id="安装插件hexo-renderer-marked"><a href="#安装插件hexo-renderer-marked" class="headerlink" title="安装插件hexo-renderer-marked"></a>安装插件hexo-renderer-marked</h3><p>新版本hexo已集成hexo-renderer-marked，如果不确定，可以使用npm查询</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mel">➜  tthourshexo npm list hexo-<span class="hljs-keyword">renderer</span>-marked<br>hexo-site@0<span class="hljs-number">.0</span><span class="hljs-number">.0</span> /Users/admin/tthours/tthourshexo<br>└── hexo-<span class="hljs-keyword">renderer</span>-marked@6<span class="hljs-number">.3</span><span class="hljs-number">.0</span><br></code></pre></td></tr></table></figure><h3 id="修改-config-yml配置"><a href="#修改-config-yml配置" class="headerlink" title="修改_config.yml配置"></a>修改_config.yml配置</h3><p>增加如下内容</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-params">marked:</span><br>  <span class="hljs-params">prependRoot:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-params">postAsset:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p><img src="/2024/12/16/yunwei/hexo/hexo_images/image-20241216185909849.png" alt="image-20241216185909849"></p><p><img src="/2024/12/16/yunwei/hexo/hexo_images/image-20241216185919525.png" alt="image-20241216185919525"></p><p><img src="/2024/12/16/yunwei/hexo/hexo_images/image-20241216185930812.png" alt="image-20241216185930812"></p><h3 id="安装插件hexo-asset-image-不好用"><a href="#安装插件hexo-asset-image-不好用" class="headerlink" title="安装插件hexo-asset-image(不好用)"></a>安装插件hexo-asset-image(不好用)</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">npm install hexo-asset-<span class="hljs-selector-tag">image</span> <span class="hljs-attr">--save</span><br></code></pre></td></tr></table></figure><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">➜  tthourshexo npm install hexo-asset-image --save<br><br>added <span class="hljs-number">21</span> packages, <span class="hljs-literal">and</span> audited <span class="hljs-number">254</span> packages in <span class="hljs-number">5</span>s<br><br><span class="hljs-number">30</span> packages are looking for funding<br>  run `npm fund` for details<br><br><span class="hljs-number">6</span> vulnerabilities (<span class="hljs-number">1</span> moderate, <span class="hljs-number">4</span> high, <span class="hljs-number">1</span> <span class="hljs-keyword">critical</span>)<br><br>Some issues need review, <span class="hljs-literal">and</span> may require choosing<br>a different dependency.<br><br>Run `npm audit` for details.<br></code></pre></td></tr></table></figure><p>插件的作用在于<code>hexo generate</code>生成静态网页资源时自动由相对路径生成绝对路径，但要求md文件中必须使用相对路径，此时的md中复制的图片目录为<code>/同名文件夹/图片名</code>，多了个文件夹路径</p><h4 id="图片文件根目录设置"><a href="#图片文件根目录设置" class="headerlink" title="图片文件根目录设置"></a>图片文件根目录设置</h4><p>打开<code>/blog/scaffolds/post.md</code>，该文件为每次hexo新建md文件时的格式，包括title、date等属性，在该属性中加入<code>typora-root-url: &#123;&#123; title &#125;&#125;</code>，使hexo新建的md文件自动以同路径下的同名文件夹为图片根目录。</p><h2 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h2><p>【1】Typora与Hexo的图片根目录设置 Magnesium 2022年12月30日</p><p><a href="https://cmmyyyy.github.io/2022/12/30/Typora%E4%B8%8EHexo%E7%9A%84%E5%9B%BE%E7%89%87%E6%A0%B9%E7%9B%AE%E5%BD%95%E8%AE%BE%E7%BD%AE/">https://cmmyyyy.github.io/2022/12/30/Typora%E4%B8%8EHexo%E7%9A%84%E5%9B%BE%E7%89%87%E6%A0%B9%E7%9B%AE%E5%BD%95%E8%AE%BE%E7%BD%AE/</a></p><p>【2】Hexo插入图片（好用的办法）robotx 2023-11-29</p><p><a href="https://juejin.cn/post/7306723921717198899">https://juejin.cn/post/7306723921717198899</a></p>]]></content>
    
    
    <categories>
      
      <category>yunwei</category>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>yunwei</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>view_dir_belong_disk</title>
    <link href="/2024/12/16/yunwei/yunweitips/view_dir_belong_disk/"/>
    <url>/2024/12/16/yunwei/yunweitips/view_dir_belong_disk/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="查看目录归属磁盘"><a href="#查看目录归属磁盘" class="headerlink" title="查看目录归属磁盘"></a>查看目录归属磁盘</h2><p>df -h [目录]</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crystal">ubuntu<span class="hljs-variable">@ip</span>-<span class="hljs-number">1</span>-<span class="hljs-number">1</span>-<span class="hljs-number">1</span>-<span class="hljs-number">1</span>:<span class="hljs-regexp">/$ df -h /opt</span><span class="hljs-regexp">/</span><br><span class="hljs-regexp">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="hljs-regexp">/dev</span><span class="hljs-regexp">/root       6.8G  2.6G  4.2G  38% /</span><br></code></pre></td></tr></table></figure><p><img src="/2024/12/16/yunwei/yunweitips/view_dir_belong_disk/image-20241217142507343.png" alt="image-20241217142507343"></p>]]></content>
    
    
    <categories>
      
      <category>yunwei</category>
      
      <category>yunweitips</category>
      
    </categories>
    
    
    <tags>
      
      <tag>yunwei</tag>
      
      <tag>yunweitips</tag>
      
      <tag>tips</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>datasec_base</title>
    <link href="/2024/12/16/security/datasec/datasec_base/"/>
    <url>/2024/12/16/security/datasec/datasec_base/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="数据安全技术"><a href="#数据安全技术" class="headerlink" title="数据安全技术"></a>数据安全技术</h2><h3 id="数据加密技术"><a href="#数据加密技术" class="headerlink" title="数据加密技术"></a>数据加密技术</h3><h4 id="对称加密技术"><a href="#对称加密技术" class="headerlink" title="对称加密技术"></a>对称加密技术</h4><h5 id="对称加密技术原理"><a href="#对称加密技术原理" class="headerlink" title="对称加密技术原理"></a>对称加密技术原理</h5><p>对称加密是指加密和解密使用相同密钥的加密算法。</p><p>发送方和接收方必须共享同一个密钥。</p><p>数据发送者通过密钥对数据进行加密，数据接收方通过密钥对数据进行解密</p><h5 id="对称加密技术优点"><a href="#对称加密技术优点" class="headerlink" title="对称加密技术优点"></a>对称加密技术优点</h5><h6 id="加密速度快"><a href="#加密速度快" class="headerlink" title="加密速度快"></a>加密速度快</h6><p>相同密钥加解密</p><h6 id="算法简单易懂"><a href="#算法简单易懂" class="headerlink" title="算法简单易懂"></a>算法简单易懂</h6><p>原理直观，容易理解和实现</p><h5 id="对称加密技术缺点"><a href="#对称加密技术缺点" class="headerlink" title="对称加密技术缺点"></a>对称加密技术缺点</h5><h6 id="密钥管理困难"><a href="#密钥管理困难" class="headerlink" title="密钥管理困难"></a>密钥管理困难</h6><p>由于相同密钥，存在密钥分发，需要保障密钥安全性，尤其在密钥传输和存储阶段</p><h6 id="安全性相对较低"><a href="#安全性相对较低" class="headerlink" title="安全性相对较低"></a>安全性相对较低</h6><p>由于相同密钥，需要加解密双方共享密钥，如果密钥被泄露，就丧失了安全性</p><h5 id="常见对称加密算法"><a href="#常见对称加密算法" class="headerlink" title="常见对称加密算法"></a>常见对称加密算法</h5><h6 id="DES（数据加密标准）"><a href="#DES（数据加密标准）" class="headerlink" title="DES（数据加密标准）"></a>DES（数据加密标准）</h6><p>经典的对称加密算法，将数据分为64位的块进行加密。</p><p>由于密钥长度较短，只有56位，目前已被认为安全性不够</p><h6 id="3DES（3重数据加密标准）"><a href="#3DES（3重数据加密标准）" class="headerlink" title="3DES（3重数据加密标准）"></a>3DES（3重数据加密标准）</h6><p>DES加密算法改进版，对数据进行 3 次DES加密操作，使用两个或三个56位密钥</p><p>安全性有所增加，加密速度相对较慢</p><h6 id="AES（高级数据加密标准）"><a href="#AES（高级数据加密标准）" class="headerlink" title="AES（高级数据加密标准）"></a>AES（高级数据加密标准）</h6><p>目前广泛使用的对称加密算法之一</p><p>支持128位、192位和256位的密钥长度，能够对128位的数据进行高效加密</p><p>例如：存储敏感信息（数据密码）、网络通信（VPN数据传输）常用AES加密</p><h4 id="非对称加密技术"><a href="#非对称加密技术" class="headerlink" title="非对称加密技术"></a>非对称加密技术</h4><h5 id="非对称加密技术原理"><a href="#非对称加密技术原理" class="headerlink" title="非对称加密技术原理"></a>非对称加密技术原理</h5><p>非对称加密使用一对密钥，即公钥和私钥</p><p>数据加密方面：加密方使用公钥进行加密，解密方使用私钥进行解密</p><p>数据签名方面：签名方使用私钥进行签名，解密方使用公钥进行解密验证真实性</p><h5 id="常见非对称加密算法"><a href="#常见非对称加密算法" class="headerlink" title="常见非对称加密算法"></a>常见非对称加密算法</h5><h6 id="RSA（Rivest-Shamir-Adleman）"><a href="#RSA（Rivest-Shamir-Adleman）" class="headerlink" title="RSA（Rivest - Shamir - Adleman）"></a>RSA（Rivest - Shamir - Adleman）</h6><p>最著名的非对称加密算法之一</p><p>基于数论中的大整数分解问题，密钥长度通常在1024位以上</p><p>例如：在数字证书、SSL&#x2F;TLS 协议（用于验证服务器身份）以及安全电子邮件（如 PGP 加密）等场景中广泛使用 RSA</p><h6 id="ECC（椭圆曲线密码体制）"><a href="#ECC（椭圆曲线密码体制）" class="headerlink" title="ECC（椭圆曲线密码体制）"></a>ECC（椭圆曲线密码体制）</h6><p>基于椭圆曲线离散对数问题</p><p>相比于RSA，可以使用更短的密钥长度达到相同甚至更高的安全性</p><p>例如：在资源受限的设备（如移动设备、物联网设备）中，ECC 因其高效性而被广泛应用于安全通信和身份认证。</p><h5 id="非对称加密技术优势"><a href="#非对称加密技术优势" class="headerlink" title="非对称加密技术优势"></a>非对称加密技术优势</h5><h6 id="安全性高"><a href="#安全性高" class="headerlink" title="安全性高"></a>安全性高</h6><h6 id=""><a href="#" class="headerlink" title=""></a></h6><h5 id="非对称加密技术劣势"><a href="#非对称加密技术劣势" class="headerlink" title="非对称加密技术劣势"></a>非对称加密技术劣势</h5><h5 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h5><p>数字签名</p><p>身份认证</p><p>密钥交换：可以通过非对称加密安全地交换对称加密所需的密钥</p><h4 id="哈希加密技术"><a href="#哈希加密技术" class="headerlink" title="哈希加密技术"></a>哈希加密技术</h4><h5 id="哈希加密技术原理"><a href="#哈希加密技术原理" class="headerlink" title="哈希加密技术原理"></a>哈希加密技术原理</h5><p>单向加密算法</p><p>将任意长度数据转换为固定长度的哈希值，也称为消息摘要</p><p>具有不可逆性，即无法从哈希值反推出原始数据</p><p>验证数据完整性：相同的数据输入会产生相同的哈希值</p><h5 id="哈希加密技术算法"><a href="#哈希加密技术算法" class="headerlink" title="哈希加密技术算法"></a>哈希加密技术算法</h5><h6 id="MD5（消息摘要算法第5版）"><a href="#MD5（消息摘要算法第5版）" class="headerlink" title="MD5（消息摘要算法第5版）"></a>MD5（消息摘要算法第5版）</h6><p>曾被广泛应用</p><p>由于安全性存在严重的问题，如容易产生碰撞，即不同的数据可能产生相同的哈希值</p><p>目前已不建议用于安全敏感的场合</p><h6 id="SHA-1（安全哈希算法1）"><a href="#SHA-1（安全哈希算法1）" class="headerlink" title="SHA-1（安全哈希算法1）"></a>SHA-1（安全哈希算法1）</h6><p>160 位的哈希值长度在面对强大的计算能力攻击时可能不够安全</p><h6 id="SHA-2（安全哈希算法2）系列"><a href="#SHA-2（安全哈希算法2）系列" class="headerlink" title="SHA-2（安全哈希算法2）系列"></a>SHA-2（安全哈希算法2）系列</h6><p>SHA-224</p><p>SHA-256</p><p>目前安全性能较高的哈希算法</p><p>SHA - 256 常用于区块链技术（如比特币中用于验证交易的完整性）、文件完整性验证（如下载文件时验证文件是否被篡改）等场景</p><h6 id="SHA-3（安全哈希算法3）"><a href="#SHA-3（安全哈希算法3）" class="headerlink" title="SHA-3（安全哈希算法3）"></a>SHA-3（安全哈希算法3）</h6><h5 id="哈希加密技术应用场景"><a href="#哈希加密技术应用场景" class="headerlink" title="哈希加密技术应用场景"></a>哈希加密技术应用场景</h5><p>密码存储</p><p>数据完整性验证</p><h3 id="数据脱敏技术"><a href="#数据脱敏技术" class="headerlink" title="数据脱敏技术"></a>数据脱敏技术</h3><h4 id="数据屏蔽（Masking）"><a href="#数据屏蔽（Masking）" class="headerlink" title="数据屏蔽（Masking）"></a>数据屏蔽（Masking）</h4><h4 id="数据替换（Substitution）"><a href="#数据替换（Substitution）" class="headerlink" title="数据替换（Substitution）"></a>数据替换（Substitution）</h4><h4 id="数据扰动（Perturbation）"><a href="#数据扰动（Perturbation）" class="headerlink" title="数据扰动（Perturbation）"></a>数据扰动（Perturbation）</h4><h4 id="数据匿名化（Anonymization）"><a href="#数据匿名化（Anonymization）" class="headerlink" title="数据匿名化（Anonymization）"></a>数据匿名化（Anonymization）</h4><h4 id="数据加密（Encryption）"><a href="#数据加密（Encryption）" class="headerlink" title="数据加密（Encryption）"></a>数据加密（Encryption）</h4><h3 id="数据访问控制技术"><a href="#数据访问控制技术" class="headerlink" title="数据访问控制技术"></a>数据访问控制技术</h3><h4 id="RBAC（基于角色的访问控制）模型"><a href="#RBAC（基于角色的访问控制）模型" class="headerlink" title="RBAC（基于角色的访问控制）模型"></a>RBAC（基于角色的访问控制）模型</h4><h4 id="ABAC（基于属性的访问控制）模型"><a href="#ABAC（基于属性的访问控制）模型" class="headerlink" title="ABAC（基于属性的访问控制）模型"></a>ABAC（基于属性的访问控制）模型</h4>]]></content>
    
    
    <categories>
      
      <category>security</category>
      
      <category>datasec</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>base</tag>
      
      <tag>datasec</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>cpe</title>
    <link href="/2024/12/16/yunwei/yunweibase/cpe/"/>
    <url>/2024/12/16/yunwei/yunweibase/cpe/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Common Platform Enumeration 通用平台枚举</p><p>以标准化方式为软件应用程序、操作系统及硬件命令的方法</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-symbol">cpe:</span>/&lt;part&gt;<span class="hljs-symbol">:&lt;vendor&gt;</span><span class="hljs-symbol">:&lt;product&gt;</span><span class="hljs-symbol">:&lt;version&gt;</span><span class="hljs-symbol">:&lt;update&gt;</span><span class="hljs-symbol">:&lt;edition&gt;</span><span class="hljs-symbol">:&lt;language&gt;</span><br></code></pre></td></tr></table></figure><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>cpe:&#x2F;o:almalinux:almalinux:9::baseos</p><h3 id="参数解释"><a href="#参数解释" class="headerlink" title="参数解释"></a>参数解释</h3><h4 id="part-目标类型"><a href="#part-目标类型" class="headerlink" title="part 目标类型"></a>part 目标类型</h4><p>可选的值：<br>a 应用程序</p><p>h 硬件平台</p><p>o 操作系统</p><h4 id="vendor-厂商"><a href="#vendor-厂商" class="headerlink" title="vendor 厂商"></a>vendor 厂商</h4><h4 id="product-产品名称"><a href="#product-产品名称" class="headerlink" title="product 产品名称"></a>product 产品名称</h4><h4 id="version-厂商提供的产品版本号"><a href="#version-厂商提供的产品版本号" class="headerlink" title="version 厂商提供的产品版本号"></a>version 厂商提供的产品版本号</h4><h4 id="update-厂商提供的产品更新版本，细粒度更小"><a href="#update-厂商提供的产品更新版本，细粒度更小" class="headerlink" title="update 厂商提供的产品更新版本，细粒度更小"></a>update 厂商提供的产品更新版本，细粒度更小</h4><h4 id="edition-发行版本，属于被弃用的属性，一般是为了兼容更早-CPE-版本，默认值为-ANY"><a href="#edition-发行版本，属于被弃用的属性，一般是为了兼容更早-CPE-版本，默认值为-ANY" class="headerlink" title="edition 发行版本，属于被弃用的属性，一般是为了兼容更早 CPE 版本，默认值为 ANY"></a>edition 发行版本，属于被弃用的属性，一般是为了兼容更早 CPE 版本，默认值为 ANY</h4><h4 id="language-界面语言"><a href="#language-界面语言" class="headerlink" title="language  界面语言"></a>language  界面语言</h4><h4 id="se-edittion-表示产品是针对某些特定市场或类别的目标用户"><a href="#se-edittion-表示产品是针对某些特定市场或类别的目标用户" class="headerlink" title="se_edittion  表示产品是针对某些特定市场或类别的目标用户"></a>se_edittion  表示产品是针对某些特定市场或类别的目标用户</h4><h4 id="target-sw-产品运行需要的软件环境"><a href="#target-sw-产品运行需要的软件环境" class="headerlink" title="target_sw 产品运行需要的软件环境"></a>target_sw 产品运行需要的软件环境</h4><h4 id="target-hw-产品运行需要的硬件环境"><a href="#target-hw-产品运行需要的硬件环境" class="headerlink" title="target_hw  产品运行需要的硬件环境"></a>target_hw  产品运行需要的硬件环境</h4><h4 id="other-表示无法归类上上述其他属性的值"><a href="#other-表示无法归类上上述其他属性的值" class="headerlink" title="other 表示无法归类上上述其他属性的值"></a>other 表示无法归类上上述其他属性的值</h4><p>如果在 WFN 未使用某个属性，则称为未指明的属性，默认值未 ANY。<code>sw_edition</code> <code>target_sw</code> <code>target_hw</code> <code>other</code> 是新引入的属性，被称作扩展属性</p><p><img src="/2024/12/16/yunwei/yunweibase/cpe/image-20241217145011696.png" alt="image-20241217145011696"></p><h3 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h3><p>【1】网络安全知识图谱构建之CPE通用组件数据集 </p><p><a href="https://zhuanlan.zhihu.com/p/282898536">https://zhuanlan.zhihu.com/p/282898536</a></p>]]></content>
    
    
    <categories>
      
      <category>yunwei</category>
      
      <category>yunweibase</category>
      
    </categories>
    
    
    <tags>
      
      <tag>yunwei</tag>
      
      <tag>yunweibase</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>machine_id</title>
    <link href="/2024/12/16/yunwei/yunweibase/machine_id/"/>
    <url>/2024/12/16/yunwei/yunweibase/machine_id/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在 Linux 系统中，每台计算机都有一个唯一的标识符，称为机器 ID（Machine ID）。机器 ID 是一个由操作系统生成的字符串，用于标识特定的计算机。它在系统启动时自动生成，并且在系统的整个生命周期中保持不变。本文将详细介绍机器 ID 的作用、生成方式以及在 Linux 系统中的应用。</p><h2 id="机器-ID-的生成方式"><a href="#机器-ID-的生成方式" class="headerlink" title="机器 ID 的生成方式"></a>机器 ID 的生成方式</h2><p>Linux 系统中的机器 ID 是通过以下方式生成的：</p><h3 id="systemd"><a href="#systemd" class="headerlink" title="systemd"></a>systemd</h3><p>在现代的 Linux 发行版中，机器 ID 是由 systemd 生成和管理的。systemd 是一个系统和服务管理器，它负责启动、停止和管理系统上的各种进程和服务。当系统启动时，systemd 会生成一个机器 ID 并将其存储在 <code>/etc/machine-id</code> 文件中。这个文件是一个只包含机器 ID 的纯文本文件。</p><p>&#x2F;etc&#x2F;machine-id 文件默认权限</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@iZbp1191gh7vw52537lyxrZ</span><span class="hljs-symbol">:/var/log</span><span class="hljs-comment"># ls -lat /etc/machine-id</span><br>-r--r--r-- <span class="hljs-number">1</span> root root <span class="hljs-number">33</span> <span class="hljs-title class_">Jun</span> <span class="hljs-number">13</span>  <span class="hljs-number">2023</span> /etc/machine-id<br></code></pre></td></tr></table></figure><h3 id="生成规则"><a href="#生成规则" class="headerlink" title="生成规则"></a>生成规则</h3><p>机器 ID 是一个 32 位的十六进制字符串，由 16 个字符组成。生成机器 ID 的规则如下：</p><ul><li>首先，系统会尝试读取 <code>/etc/machine-id</code> 文件。如果该文件存在且内容有效，则将其用作机器 ID。</li><li>如果 <code>/etc/machine-id</code> 文件不存在或内容无效，则系统会生成一个新的机器 ID，并将其写入 <code>/etc/machine-id</code> 文件中。</li></ul><h2 id="机器-ID-的作用"><a href="#机器-ID-的作用" class="headerlink" title="机器 ID 的作用"></a>机器 ID 的作用</h2><p>机器 ID 在 Linux 系统中具有以下作用：</p><h3 id="唯一标识符"><a href="#唯一标识符" class="headerlink" title="唯一标识符"></a>唯一标识符</h3><p>机器 ID 是用来唯一标识一台计算机的。通过机器 ID，系统可以识别不同的计算机，并进行一些特定的操作和配置。</p><h3 id="许可验证"><a href="#许可验证" class="headerlink" title="许可验证"></a>许可验证</h3><p>一些软件和服务提供商可能使用机器 ID 来验证许可证和授权。通过检查机器 ID，他们可以确定软件是否在授权范围内运行。</p><h3 id="安全性"><a href="#安全性" class="headerlink" title="安全性"></a>安全性</h3><p>机器 ID 在安全性方面也起到了一定的作用。它可以用于生成一些加密密钥或用于加密通信，以确保只有具有特定机器 ID 的计算机才能解密和访问数据。</p><h3 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h3><p>机器 ID 还可以用于系统配置和管理。一些配置文件和脚本可能会根据机器 ID 进行不同的操作或应用不同的设置。</p><h2 id="使用机器-ID"><a href="#使用机器-ID" class="headerlink" title="使用机器 ID"></a>使用机器 ID</h2><p>在 Linux 系统中，可以使用机器 ID 来进行一些操作和配置。</p><h3 id="查看机器-ID"><a href="#查看机器-ID" class="headerlink" title="查看机器 ID"></a>查看机器 ID</h3><p>要查看当前计算机的机器 ID，可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /etc/machine-id<br></code></pre></td></tr></table></figure><h3 id="使用机器-ID-进行其他操作"><a href="#使用机器-ID-进行其他操作" class="headerlink" title="使用机器 ID 进行其他操作"></a>使用机器 ID 进行其他操作</h3><p>除了查看机器 ID，还可以在以下情况下使用机器 ID 进行操作和配置：</p><ul><li>许可验证：某些软件和服务可能需要验证机器 ID 才能使用许可证进行授权。在这种情况下，你可以将机器 ID 提供给软件或服务提供商以进行许可证验证。</li><li>系统配置：一些配置文件或脚本可能会使用机器 ID 进行不同的操作或应用不同的设置。你可以根据机器 ID 编写脚本或配置文件，以根据不同的机器 ID 进行特定的配置。</li><li>安全性：机器 ID 可用于增加系统的安全性。例如，你可以使用机器 ID 生成一些加密密钥，以确保只有具有特定机器 ID 的计算机才能解密和访问数据。</li></ul><h2 id="机器-ID-的注意事项"><a href="#机器-ID-的注意事项" class="headerlink" title="机器 ID 的注意事项"></a>机器 ID 的注意事项</h2><p>在使用机器 ID 时，需要注意以下事项：</p><ul><li>唯一性：机器 ID 应该是唯一的，每台计算机都应该有不同的机器 ID。确保在克隆或复制系统时更新机器 ID。</li><li>保密性：机器 ID 是一个敏感信息，应该妥善保管。避免将机器 ID 泄露给不信任的人或系统。</li><li>持久性：机器 ID 在系统的整个生命周期中保持不变。在更换硬件或重新安装操作系统时，机器 ID 通常不会改变。</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>机器 ID 是 Linux 系统中用于唯一标识计算机的标识符。它由 systemd 生成并存储在 <code>/etc/machine-id</code> 文件中。机器 ID 在许可验证、安全性和系统配置方面发挥着重要作用。通过机器 ID，系统可以识别不同的计算机并进行特定的操作和配置。在使用机器 ID 时，请确保唯一性、保密性和持久性，并根据需要使用相应的命令和配置文件来操作和配置系统。</p><h2 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h2><p>【1】开发者社区&#x2F;龙蜥操作系统&#x2F;文章&#x2F;什么是 Linux 中的机器 ID？</p><p><a href="https://developer.aliyun.com/article/1319056">https://developer.aliyun.com/article/1319056</a></p>]]></content>
    
    
    <categories>
      
      <category>yunwei</category>
      
      <category>yunweibase</category>
      
    </categories>
    
    
    <tags>
      
      <tag>yunwei</tag>
      
      <tag>yunweibase</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>distinguish_virtual_container_machine</title>
    <link href="/2024/12/16/security/cloudsec/cloudsectips/distinguish_virtual_container_machine/"/>
    <url>/2024/12/16/security/cloudsec/cloudsectips/distinguish_virtual_container_machine/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p>区分虚拟机、容器和物理机的方法</p><h1 id="判断是否为虚拟机"><a href="#判断是否为虚拟机" class="headerlink" title="判断是否为虚拟机"></a>判断是否为虚拟机</h1><h2 id="Linux服务器"><a href="#Linux服务器" class="headerlink" title="Linux服务器"></a>Linux服务器</h2><h3 id="hostnamectl-grep-Virtualization"><a href="#hostnamectl-grep-Virtualization" class="headerlink" title="hostnamectl | grep Virtualization"></a>hostnamectl | grep Virtualization</h3><p><strong>非虚拟机，查询没有结果</strong></p><p><strong>虚拟机，查询有结果</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@iZbp1191gh7vw52537lyxrZ</span><span class="hljs-symbol">:/var/log</span><span class="hljs-comment"># hostnamectl | grep Virtualization</span><br>  <span class="hljs-symbol">Virtualization:</span> kvm<br></code></pre></td></tr></table></figure><h3 id="dmidecode-s-system-product-name"><a href="#dmidecode-s-system-product-name" class="headerlink" title="dmidecode -s system-product-name"></a>dmidecode -s system-product-name</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@110</span> ~]<span class="hljs-meta"># dmidecode -s system-product-name</span><br>Alibaba Cloud ECS<br></code></pre></td></tr></table></figure><p><strong>非虚拟机，查询结果为具体产品型号</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">(base) [root<span class="hljs-symbol">@1_1_1_1</span> /]<span class="hljs-meta"># dmidecode -s system-product-name</span><br>PowerEdge R630<br></code></pre></td></tr></table></figure><p><strong>虚拟机，查询结果是KVM或者云厂商设备型号</strong></p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs clean">[root@ /]# dmidecode -s <span class="hljs-keyword">system</span>-product-name<br>KVM<br></code></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">(<span class="hljs-keyword">base) </span>[root@ ~]<span class="hljs-comment"># dmidecode -s system-product-name</span><br>Alibaba <span class="hljs-keyword">Cloud </span>ECS<br></code></pre></td></tr></table></figure><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs delphi">[root@ ~]# dmidecode -s system-product-<span class="hljs-keyword">name</span><br>VMware <span class="hljs-keyword">Virtual</span> <span class="hljs-keyword">Platform</span><br></code></pre></td></tr></table></figure><h3 id="dmesg-grep-i-virtual"><a href="#dmesg-grep-i-virtual" class="headerlink" title="dmesg | grep -i virtual"></a>dmesg | grep -i virtual</h3><p><strong>非虚拟机，查询没有记录</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs csharp">(<span class="hljs-keyword">base</span>) [root@ /]<span class="hljs-meta"># dmesg | grep -i virtual</span><br>(<span class="hljs-keyword">base</span>) [root@ /]<span class="hljs-meta">#</span><br></code></pre></td></tr></table></figure><p><strong>虚拟机，查询有记录</strong></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-attr">[root@ /]</span># <span class="hljs-selector-tag">dmesg</span> | <span class="hljs-selector-tag">grep</span> <span class="hljs-selector-tag">-i</span> <span class="hljs-selector-tag">virtual</span><br><span class="hljs-selector-attr">[    0.000000]</span> <span class="hljs-selector-tag">Booting</span> <span class="hljs-selector-tag">paravirtualized</span> <span class="hljs-selector-tag">kernel</span> <span class="hljs-selector-tag">on</span> <span class="hljs-selector-tag">KVM</span><br><span class="hljs-selector-attr">[    0.513181]</span> <span class="hljs-selector-tag">input</span>: <span class="hljs-selector-tag">VirtualPS</span>/<span class="hljs-number">2</span> <span class="hljs-selector-tag">VMware</span> <span class="hljs-selector-tag">VMMouse</span> <span class="hljs-selector-tag">as</span> /<span class="hljs-selector-tag">devices</span>/<span class="hljs-selector-tag">platform</span>/<span class="hljs-selector-tag">i8042</span>/<span class="hljs-selector-tag">serio1</span>/<span class="hljs-selector-tag">input</span>/<span class="hljs-selector-tag">input2</span><br><span class="hljs-selector-attr">[    0.513391]</span> <span class="hljs-selector-tag">input</span>: <span class="hljs-selector-tag">VirtualPS</span>/<span class="hljs-number">2</span> <span class="hljs-selector-tag">VMware</span> <span class="hljs-selector-tag">VMMouse</span> <span class="hljs-selector-tag">as</span> /<span class="hljs-selector-tag">devices</span>/<span class="hljs-selector-tag">platform</span>/<span class="hljs-selector-tag">i8042</span>/<span class="hljs-selector-tag">serio1</span>/<span class="hljs-selector-tag">input</span>/<span class="hljs-selector-tag">input3</span><br><span class="hljs-selector-attr">[    0.528883]</span> <span class="hljs-selector-tag">systemd</span><span class="hljs-selector-attr">[1]</span>: <span class="hljs-selector-tag">Detected</span> <span class="hljs-selector-tag">virtualization</span> <span class="hljs-selector-tag">kvm</span>.<br><span class="hljs-selector-attr">[    0.563314]</span> <span class="hljs-selector-tag">systemd</span><span class="hljs-selector-attr">[1]</span>: <span class="hljs-selector-tag">Starting</span> <span class="hljs-selector-tag">Setup</span> <span class="hljs-selector-tag">Virtual</span> <span class="hljs-selector-tag">Console</span>...<br><span class="hljs-selector-attr">[    2.693251]</span> <span class="hljs-selector-tag">bochs-drm</span> <span class="hljs-number">0000</span>:<span class="hljs-number">00</span>:<span class="hljs-number">02.0</span>: <span class="hljs-selector-tag">Virtual-1</span>: <span class="hljs-selector-tag">EDID</span> <span class="hljs-selector-tag">is</span> <span class="hljs-selector-tag">invalid</span>:<br></code></pre></td></tr></table></figure><p><strong>备注</strong>：云服务器，有可能也没有记录</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">(base) [root@ ~]<span class="hljs-comment"># dmesg | grep -i virtual</span><br>You have mail <span class="hljs-keyword">in</span> <span class="hljs-regexp">/var/</span>spool<span class="hljs-regexp">/mail/</span>root<br></code></pre></td></tr></table></figure><h3 id="lshw-class-system"><a href="#lshw-class-system" class="headerlink" title="lshw -class system"></a>lshw -class system</h3><p>lshw工具需要安装</p><p>查看硬件信息工具</p><p>安装：yum install lshw -y&#x2F;apt install lash</p><hr><p><strong>非虚拟机，结果中关注product，会有硬件厂商信息</strong></p><p>product: PowerEdge R630</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs nix">(base) [root@ <span class="hljs-operator">/</span>]<span class="hljs-comment"># lshw -class system</span><br><br>    <span class="hljs-params">description:</span> Rack Mount Chassis<br>    <span class="hljs-params">product:</span> PowerEdge R630 (SKU<span class="hljs-operator">=</span>NotProvided;<span class="hljs-attr">ModelName</span><span class="hljs-operator">=</span>PowerEdge R630)<br>    <span class="hljs-params">vendor:</span> Dell Inc.<br>    <span class="hljs-params">serial:</span> GT550S2<br>    <span class="hljs-params">width:</span> <span class="hljs-number">64</span> bits<br>    <span class="hljs-params">capabilities:</span> smbios-<span class="hljs-number">2.8</span> dmi-<span class="hljs-number">2.8</span> smp vsyscall32<br>    <span class="hljs-params">configuration:</span> boot<span class="hljs-operator">=</span>normal chassis<span class="hljs-operator">=</span>rackmount sku<span class="hljs-operator">=</span>SKU<span class="hljs-operator">=</span>NotProvided;<span class="hljs-attr">ModelName</span><span class="hljs-operator">=</span>PowerEdge R630 uuid<span class="hljs-operator">=</span><span class="hljs-number">111</span>1-<span class="hljs-number">111</span>1-<span class="hljs-number">11</span>1-<span class="hljs-number">111</span>1-<span class="hljs-number">11111</span><br>  <span class="hljs-operator">*</span><span class="hljs-operator">-</span>pnp00:<span class="hljs-number">00</span><br>       <span class="hljs-params">product:</span> PnP device PNP0b00<br>       physical <span class="hljs-params">id:</span> <span class="hljs-number">8</span>a<br>       <span class="hljs-params">capabilities:</span> pnp<br>       <span class="hljs-params">configuration:</span> driver<span class="hljs-operator">=</span>rtc_cmos<br>  <span class="hljs-operator">*</span><span class="hljs-operator">-</span>pnp00:<span class="hljs-number">01</span><br>       <span class="hljs-params">product:</span> PnP device PNP0c02<br>       physical <span class="hljs-params">id:</span> <span class="hljs-number">8</span>b<br>       <span class="hljs-params">capabilities:</span> pnp<br>       <span class="hljs-params">configuration:</span> driver<span class="hljs-operator">=</span>system<br></code></pre></td></tr></table></figure><p><strong>虚拟机，结果中关注product，会有虚拟化信息</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@</span> <span class="hljs-string">/</span>]<span class="hljs-comment"># lshw -class system</span><br><br>    <span class="hljs-attr">description:</span> <span class="hljs-string">Computer</span><br>    <span class="hljs-attr">product:</span> <span class="hljs-string">KVM</span><br>    <span class="hljs-attr">vendor:</span> <span class="hljs-string">Red</span> <span class="hljs-string">Hat</span><br>    <span class="hljs-attr">version:</span> <span class="hljs-string">RHEL</span> <span class="hljs-number">7.6</span><span class="hljs-number">.0</span> <span class="hljs-string">PC</span> <span class="hljs-string">(i440FX</span> <span class="hljs-string">+</span> <span class="hljs-string">PIIX,</span> <span class="hljs-number">1996</span><span class="hljs-string">)</span><br>    <span class="hljs-attr">width:</span> <span class="hljs-number">64</span> <span class="hljs-string">bits</span><br>    <span class="hljs-attr">capabilities:</span> <span class="hljs-string">smbios-2.8</span> <span class="hljs-string">dmi-2.8</span> <span class="hljs-string">smp</span> <span class="hljs-string">vsyscall32</span><br>    <span class="hljs-attr">configuration:</span> <span class="hljs-string">boot=normal</span> <span class="hljs-string">family=Red</span> <span class="hljs-string">Hat</span> <span class="hljs-string">Enterprise</span> <span class="hljs-string">Linux</span> <span class="hljs-string">uuid=</span><br>  <span class="hljs-string">*-pnp00:04</span><br>       <span class="hljs-attr">product:</span> <span class="hljs-string">PnP</span> <span class="hljs-string">device</span> <span class="hljs-string">PNP0b00</span><br>       <span class="hljs-attr">physical id:</span> <span class="hljs-number">5</span><br>       <span class="hljs-attr">capabilities:</span> <span class="hljs-string">pnp</span><br>       <span class="hljs-attr">configuration:</span> <span class="hljs-string">driver=rtc_cmos</span><br></code></pre></td></tr></table></figure><p>阿里云</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs nix">(base) [root@ ~]<span class="hljs-comment"># lshw -class system</span><br><br>    <span class="hljs-params">description:</span> Computer<br>    <span class="hljs-params">product:</span> Alibaba Cloud ECS<br>    <span class="hljs-params">vendor:</span> Alibaba Cloud<br>    <span class="hljs-params">version:</span> pc-i440fx-<span class="hljs-number">2.1</span><br>    <span class="hljs-params">serial:</span> <span class="hljs-number">3</span>d6a05bd-<span class="hljs-number">014</span>a-<span class="hljs-number">479</span>6-<span class="hljs-number">974</span>e-<br>    <span class="hljs-params">width:</span> <span class="hljs-number">64</span> bits<br>    <span class="hljs-params">capabilities:</span> smbios-<span class="hljs-number">2.8</span> dmi-<span class="hljs-number">2.8</span> vsyscall32<br>    <span class="hljs-params">configuration:</span> boot<span class="hljs-operator">=</span>normal uuid<span class="hljs-operator">=</span><br>  <span class="hljs-operator">*</span><span class="hljs-operator">-</span>pnp00:<span class="hljs-number">00</span><br>       <span class="hljs-params">product:</span> PnP device PNP0b00<br>       physical <span class="hljs-params">id:</span> <span class="hljs-number">1</span><br>       <span class="hljs-params">capabilities:</span> pnp<br>       <span class="hljs-params">configuration:</span> driver<span class="hljs-operator">=</span>rtc_cmos<br></code></pre></td></tr></table></figure><h2 id="Windows服务器"><a href="#Windows服务器" class="headerlink" title="Windows服务器"></a>Windows服务器</h2><p>CMD命令</p><h3 id="systeminfo-findstr-i-“System-Model”"><a href="#systeminfo-findstr-i-“System-Model”" class="headerlink" title="systeminfo | findstr &#x2F;i “System Model”"></a>systeminfo | findstr &#x2F;i “System Model”</h3><h3 id="systeminfo-findstr-i-“系统型号”"><a href="#systeminfo-findstr-i-“系统型号”" class="headerlink" title="systeminfo | findstr &#x2F;i “系统型号”"></a>systeminfo | findstr &#x2F;i “系统型号”</h3><p><strong>非虚拟机，关注结果中是否存在硬件厂商信息</strong></p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nsis">C:\Users&gt;<span class="hljs-params">system</span>info | findstr /i <span class="hljs-string">&quot;系统型号&quot;</span><br>系统型号:         IBM <span class="hljs-params">System</span>X X3550 M3 -[<span class="hljs-number">7944</span>ONT]-<br></code></pre></td></tr></table></figure><p><strong>虚拟机，关注结果中是否存在虚拟化信息</strong></p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nsis">C:\Users\<span class="hljs-literal">admin</span>&gt;<span class="hljs-params">system</span>info | findstr /i <span class="hljs-string">&quot;系统型号&quot;</span><br>系统型号:         VMware Virtual Platform<br></code></pre></td></tr></table></figure><p>POWERSHELL命令</p><h3 id="get-wmiobject-win32-computersystem-fl-model"><a href="#get-wmiobject-win32-computersystem-fl-model" class="headerlink" title="get-wmiobject win32_computersystem | fl model"></a><strong>get-wmiobject win32_computersystem | fl model</strong></h3><p><strong>非虚拟机，关注结果中是否存在硬件厂商信息</strong></p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">PS</span> <span class="hljs-string">C</span>:\<span class="hljs-string">Users</span>&gt; <span class="hljs-built_in">get-wmiobject</span> <span class="hljs-string">win32_computersystem</span> | <span class="hljs-string">fl</span> <span class="hljs-string">model</span>  <span class="hljs-string">model</span> : <span class="hljs-string">IBM</span> <span class="hljs-string">SystemX</span> <span class="hljs-string">X3550</span> <span class="hljs-string">M3</span> -[<span class="hljs-string">7944ONT</span>]-<br></code></pre></td></tr></table></figure><p><strong>虚拟机，关注结果中是否存在虚拟化信息</strong></p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">PS</span> <span class="hljs-string">C</span>:\<span class="hljs-string">Users</span>\<span class="hljs-string">admin</span>&gt; <span class="hljs-built_in">get-wmiobject</span> <span class="hljs-string">win32_computersystem</span> | <span class="hljs-string">fl</span> <span class="hljs-string">model</span>  <span class="hljs-string">model</span> : <span class="hljs-string">VMware</span> <span class="hljs-string">Virtual</span> <span class="hljs-string">Platform</span>  <br></code></pre></td></tr></table></figure><h1 id="判断是否为容器"><a href="#判断是否为容器" class="headerlink" title="判断是否为容器"></a>判断是否为容器</h1><h3 id="查看-proc-1-cgroup"><a href="#查看-proc-1-cgroup" class="headerlink" title="查看 &#x2F;proc&#x2F;1&#x2F;cgroup"></a>查看 &#x2F;proc&#x2F;1&#x2F;cgroup</h3><p>原理：容器通过 cgroup 实现资源限制，查看是否在一个 cgroup 组中</p><p><strong>物理机或虚拟机</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs elixir">[root<span class="hljs-variable">@subdomain</span>-src /]<span class="hljs-comment"># cat /proc/1/cgroup</span><br><span class="hljs-number">13</span><span class="hljs-symbol">:freezer</span><span class="hljs-symbol">:/</span><br><span class="hljs-number">12</span><span class="hljs-symbol">:perf_event</span><span class="hljs-symbol">:/</span><br><span class="hljs-number">11</span><span class="hljs-symbol">:memory</span><span class="hljs-symbol">:/init</span>.scope<br><span class="hljs-number">10</span><span class="hljs-symbol">:blkio</span><span class="hljs-symbol">:/init</span>.scope<br><span class="hljs-number">9</span><span class="hljs-symbol">:cpuset</span><span class="hljs-symbol">:/</span><br><span class="hljs-number">8</span><span class="hljs-symbol">:pids</span><span class="hljs-symbol">:/init</span>.scope<br><span class="hljs-number">7</span><span class="hljs-symbol">:net_cls</span>,<span class="hljs-symbol">net_prio:</span>/<br><span class="hljs-number">6</span><span class="hljs-symbol">:misc</span><span class="hljs-symbol">:/</span><br><span class="hljs-number">5</span><span class="hljs-symbol">:devices</span><span class="hljs-symbol">:/init</span>.scope<br><span class="hljs-number">4</span><span class="hljs-symbol">:rdma</span><span class="hljs-symbol">:/</span><br><span class="hljs-number">3</span><span class="hljs-symbol">:cpu</span>,<span class="hljs-symbol">cpuacct:</span>/init.scope<br><span class="hljs-number">2</span><span class="hljs-symbol">:hugetlb</span><span class="hljs-symbol">:/</span><br><span class="hljs-number">1</span><span class="hljs-symbol">:name=systemd</span><span class="hljs-symbol">:/init</span>.scope<br></code></pre></td></tr></table></figure><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs elixir">[root<span class="hljs-variable">@localhost</span> /]<span class="hljs-comment"># cat /proc/1/cgroup</span><br><span class="hljs-number">11</span><span class="hljs-symbol">:devices</span><span class="hljs-symbol">:/</span><br><span class="hljs-number">10</span><span class="hljs-symbol">:memory</span><span class="hljs-symbol">:/</span><br><span class="hljs-number">9</span><span class="hljs-symbol">:perf_event</span><span class="hljs-symbol">:/</span><br><span class="hljs-number">8</span><span class="hljs-symbol">:freezer</span><span class="hljs-symbol">:/</span><br><span class="hljs-number">7</span><span class="hljs-symbol">:cpuacct</span>,<span class="hljs-symbol">cpu:</span>/<br><span class="hljs-number">6</span><span class="hljs-symbol">:blkio</span><span class="hljs-symbol">:/</span><br><span class="hljs-number">5</span><span class="hljs-symbol">:net_prio</span>,<span class="hljs-symbol">net_cls:</span>/<br><span class="hljs-number">4</span><span class="hljs-symbol">:hugetlb</span><span class="hljs-symbol">:/</span><br><span class="hljs-number">3</span><span class="hljs-symbol">:cpuset</span><span class="hljs-symbol">:/</span><br><span class="hljs-number">2</span><span class="hljs-symbol">:pids</span><span class="hljs-symbol">:/</span><br><span class="hljs-number">1</span><span class="hljs-symbol">:name=systemd</span><span class="hljs-symbol">:/</span><br></code></pre></td></tr></table></figure><p><strong>容器</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs elixir">[root<span class="hljs-variable">@4db3bdbde0f4</span> /]<span class="hljs-comment"># cat /proc/1/cgroup</span><br><span class="hljs-number">13</span><span class="hljs-symbol">:freezer</span><span class="hljs-symbol">:/docker/</span><span class="hljs-number">4</span>db3bdbde0f47c7ccc0a316a3e48ee28dcb2532cfdd1807edd669a156a6735fe<br><span class="hljs-number">12</span><span class="hljs-symbol">:perf_event</span><span class="hljs-symbol">:/docker/</span><span class="hljs-number">4</span>db3bdbde0f47c7ccc0a316a3e48ee28dcb2532cfdd1807edd669a156a6735fe<br><span class="hljs-number">11</span><span class="hljs-symbol">:memory</span><span class="hljs-symbol">:/docker/</span><span class="hljs-number">4</span>db3bdbde0f47c7ccc0a316a3e48ee28dcb2532cfdd1807edd669a156a6735fe<br><span class="hljs-number">10</span><span class="hljs-symbol">:blkio</span><span class="hljs-symbol">:/docker/</span><span class="hljs-number">4</span>db3bdbde0f47c7ccc0a316a3e48ee28dcb2532cfdd1807edd669a156a6735fe<br><span class="hljs-number">9</span><span class="hljs-symbol">:cpuset</span><span class="hljs-symbol">:/docker/</span><span class="hljs-number">4</span>db3bdbde0f47c7ccc0a316a3e48ee28dcb2532cfdd1807edd669a156a6735fe<br><span class="hljs-number">8</span><span class="hljs-symbol">:pids</span><span class="hljs-symbol">:/docker/</span><span class="hljs-number">4</span>db3bdbde0f47c7ccc0a316a3e48ee28dcb2532cfdd1807edd669a156a6735fe<br><span class="hljs-number">7</span><span class="hljs-symbol">:net_cls</span>,<span class="hljs-symbol">net_prio:</span>/docker/<span class="hljs-number">4</span>db3bdbde0f47c7ccc0a316a3e48ee28dcb2532cfdd1807edd669a156a6735fe<br><span class="hljs-number">6</span><span class="hljs-symbol">:misc</span><span class="hljs-symbol">:/</span><br><span class="hljs-number">5</span><span class="hljs-symbol">:devices</span><span class="hljs-symbol">:/docker/</span><span class="hljs-number">4</span>db3bdbde0f47c7ccc0a316a3e48ee28dcb2532cfdd1807edd669a156a6735fe<br><span class="hljs-number">4</span><span class="hljs-symbol">:rdma</span><span class="hljs-symbol">:/docker/</span><span class="hljs-number">4</span>db3bdbde0f47c7ccc0a316a3e48ee28dcb2532cfdd1807edd669a156a6735fe<br><span class="hljs-number">3</span><span class="hljs-symbol">:cpu</span>,<span class="hljs-symbol">cpuacct:</span>/docker/<span class="hljs-number">4</span>db3bdbde0f47c7ccc0a316a3e48ee28dcb2532cfdd1807edd669a156a6735fe<br><span class="hljs-number">2</span><span class="hljs-symbol">:hugetlb</span><span class="hljs-symbol">:/docker/</span><span class="hljs-number">4</span>db3bdbde0f47c7ccc0a316a3e48ee28dcb2532cfdd1807edd669a156a6735fe<br><span class="hljs-number">1</span><span class="hljs-symbol">:name=systemd</span><span class="hljs-symbol">:/docker/</span><span class="hljs-number">4</span>db3bdbde0f47c7ccc0a316a3e48ee28dcb2532cfdd1807edd669a156a6735fe<br></code></pre></td></tr></table></figure><h3 id="查看-proc-1-cmdline"><a href="#查看-proc-1-cmdline" class="headerlink" title="查看 &#x2F;proc&#x2F;1&#x2F;cmdline"></a>查看 &#x2F;proc&#x2F;1&#x2F;cmdline</h3><p><strong>物理机或虚拟机为 systemd 或者init程序</strong></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs swift">[root<span class="hljs-meta">@iZbp1191gh7vw52537lyxrZ</span> <span class="hljs-operator">~</span>]# cat <span class="hljs-regexp">/proc/</span><span class="hljs-number">1</span><span class="hljs-operator">/</span>cmdline<br><span class="hljs-regexp">/usr/</span>lib<span class="hljs-regexp">/systemd/</span>systemd<span class="hljs-operator">--</span>system<span class="hljs-operator">--</span>deserialize25<br><br>[root<span class="hljs-meta">@localhost</span> <span class="hljs-regexp">/]# cat /</span>proc<span class="hljs-regexp">/1/</span>cmdline<br><span class="hljs-regexp">/usr/</span>lib<span class="hljs-regexp">/systemd/</span>systemd<span class="hljs-operator">--</span>switched<span class="hljs-operator">-</span>root<span class="hljs-operator">--</span>system<span class="hljs-operator">--</span>deserialize22<br></code></pre></td></tr></table></figure><p><strong>容器为应用程序</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@4db3bdbde0f4 /]# <span class="hljs-built_in">cat</span> /proc/1/cmdline<br>/bin/bash<br></code></pre></td></tr></table></figure><h1 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h1><p>【1】判断服务器是否为虚拟机的几种方法 <a href="https://www.jianshu.com/u/f109418ce585">baiyongjie</a> 2020.04.03 23:02:16</p><p><a href="https://www.jianshu.com/p/cc9033914819">https://www.jianshu.com/p/cc9033914819</a></p>]]></content>
    
    
    <categories>
      
      <category>security</category>
      
      <category>cloudsec</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>cloudsec</tag>
      
      <tag>tips</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>dc_attack</title>
    <link href="/2024/12/16/security/itsec/dc/dc_attack/"/>
    <url>/2024/12/16/security/itsec/dc/dc_attack/</url>
    
    <content type="html"><![CDATA[<span id="more"></span>]]></content>
    
    
    <categories>
      
      <category>security</category>
      
      <category>itsec</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>itsec</tag>
      
      <tag>attack</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>k8s_base</title>
    <link href="/2024/12/16/security/cloudsec/k8s/k8s_base/"/>
    <url>/2024/12/16/security/cloudsec/k8s/k8s_base/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p>google开源</p><p>基础架构</p><p>master节点和node节点</p><p>master节点负责资源分配，应用调度，应用扩容等</p><p>node节点允许应用服务，node节点的kubelet负责进行master和node通信</p><p>k8s主要组件</p><p>kube-apiserver</p><h2 id="查看k8s版本"><a href="#查看k8s版本" class="headerlink" title="查看k8s版本"></a>查看k8s版本</h2><p>kubectl version</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[root@node02 ~]# kubectl <span class="hljs-keyword">version</span><br><span class="hljs-built_in">WARNING</span>: This <span class="hljs-keyword">version</span> information <span class="hljs-keyword">is</span> deprecated <span class="hljs-keyword">and</span> will be replaced <span class="hljs-keyword">with</span> the output <span class="hljs-keyword">from</span> kubectl <span class="hljs-keyword">version</span> <span class="hljs-comment">--short.  Use --output=yaml|json to get the full version.</span><br>Client <span class="hljs-keyword">Version</span>: <span class="hljs-keyword">version</span>.<span class="hljs-keyword">Info</span>&#123;Major:&quot;1&quot;, Minor:&quot;26&quot;, GitVersion:&quot;v1.26.1&quot;, GitCommit:&quot;8f94681cd294aa8cfd3407b8191f6c70214973a4&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2023-01-18T15:58:16Z&quot;, GoVersion:&quot;go1.19.5&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/amd64&quot;&#125;<br>Kustomize <span class="hljs-keyword">Version</span>: v4<span class="hljs-number">.5</span><span class="hljs-number">.7</span><br><span class="hljs-keyword">Server</span> <span class="hljs-keyword">Version</span>: <span class="hljs-keyword">version</span>.<span class="hljs-keyword">Info</span>&#123;Major:&quot;1&quot;, Minor:&quot;24&quot;, GitVersion:&quot;v1.24.6&quot;, GitCommit:&quot;b39bf148cd654599a52e867485c02c4f9d28b312&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2022-09-21T13:12:04Z&quot;, GoVersion:&quot;go1.18.6&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/amd64&quot;&#125;<br><span class="hljs-built_in">WARNING</span>: <span class="hljs-keyword">version</span> difference <span class="hljs-keyword">between</span> client (<span class="hljs-number">1.26</span>) <span class="hljs-keyword">and</span> <span class="hljs-keyword">server</span> (<span class="hljs-number">1.24</span>) exceeds the supported minor <span class="hljs-keyword">version</span> skew <span class="hljs-keyword">of</span> +/<span class="hljs-number">-1</span><br></code></pre></td></tr></table></figure><h2 id="查看-job"><a href="#查看-job" class="headerlink" title="查看 job"></a>查看 job</h2><p>kubectl get job</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@master01</span> kube-hunter]<span class="hljs-meta"># kubectl get job</span><br>NAME          COMPLETIONS   DURATION   AGE<br>kube-hunter   <span class="hljs-number">1</span>/<span class="hljs-number">1</span>           <span class="hljs-number">49</span>s        <span class="hljs-number">57</span>m<br></code></pre></td></tr></table></figure><h2 id="删除job"><a href="#删除job" class="headerlink" title="删除job"></a>删除job</h2><h3 id="按照job名删除"><a href="#按照job名删除" class="headerlink" title="按照job名删除"></a>按照job名删除</h3><p>kubectl delete job jobname</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript">[root@master01 kube-hunter]<span class="hljs-comment"># kubectl get job</span><br>NAME          COMPLETIONS   DURATION   AGE<br>kube-hunter   <span class="hljs-number">1</span>/<span class="hljs-number">1</span>           <span class="hljs-number">49</span>s        <span class="hljs-number">57</span>m<br>[root@master01 kube-hunter]<span class="hljs-comment"># </span><br>[root@master01 kube-hunter]<span class="hljs-comment"># </span><br>[root@master01 kube-hunter]<span class="hljs-comment"># kubectl delete job kube-hunter</span><br>job.batch <span class="hljs-string">&quot;kube-hunter&quot;</span> deleted<br>[root@master01 kube-hunter]<span class="hljs-comment"># kubectl get job</span><br>No resources found <span class="hljs-keyword">in</span> <span class="hljs-keyword">default</span> namespace.<br></code></pre></td></tr></table></figure><h2 id="创建job"><a href="#创建job" class="headerlink" title="创建job"></a>创建job</h2><p><strong>kubectl create -f jobfile</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@master01</span> kube-hunter]<span class="hljs-meta"># kubectl create -f ./job.yaml</span><br><br>job.batch/kube-hunter created<br><br>[root<span class="hljs-symbol">@master01</span> kube-hunter]<span class="hljs-meta"># </span><br><br>[root<span class="hljs-symbol">@master01</span> kube-hunter]<span class="hljs-meta"># </span><br><br>[root<span class="hljs-symbol">@master01</span> kube-hunter]<span class="hljs-meta"># kubectl get jobs</span><br><br>NAME     COMPLETIONS  DURATION  AGE<br><br>kube-hunter  <span class="hljs-number">0</span>/<span class="hljs-number">1</span>      <span class="hljs-number">11</span>s    <span class="hljs-number">11</span>s<br></code></pre></td></tr></table></figure><h1 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h1>]]></content>
    
    
    <categories>
      
      <category>security</category>
      
      <category>cloudsec</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>cloudsec</tag>
      
      <tag>base</tag>
      
      <tag>k8s</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo_install</title>
    <link href="/2024/12/15/yunwei/hexo/hexo_install/"/>
    <url>/2024/12/15/yunwei/hexo/hexo_install/</url>
    
    <content type="html"><![CDATA[<h2 id="安装基础环境"><a href="#安装基础环境" class="headerlink" title="安装基础环境"></a>安装基础环境</h2><h3 id="安装npm"><a href="#安装npm" class="headerlink" title="安装npm"></a>安装npm</h3><p>brew install npm</p><p>npm -v 查看已安装版本</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript">➜  tthours <span class="hljs-built_in">npm</span> -v<br><span class="hljs-number">10.9</span><span class="hljs-number">.2</span><br></code></pre></td></tr></table></figure><h3 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h3><p>brew install node</p><p>node -v 查看已安装版本</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">➜  tthours <span class="hljs-keyword">node</span> <span class="hljs-title">-v</span><br>v23.<span class="hljs-number">4.0</span><br></code></pre></td></tr></table></figure><h3 id="安装hexo-cli"><a href="#安装hexo-cli" class="headerlink" title="安装hexo-cli"></a>安装hexo-cli</h3><p>npm install -g hexo-cli </p><h2 id="博客部署"><a href="#博客部署" class="headerlink" title="博客部署"></a>博客部署</h2><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>hexo init 博客文件夹</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs lasso">➜  tthours hexo init tthourshexo    <br>INFO  Cloning hexo<span class="hljs-params">-starter</span> https:<span class="hljs-comment">//github.com/hexojs/hexo-starter.git</span><br>INFO  Install dependencies<br><span class="hljs-params">...</span>.<br><span class="hljs-params">...</span>.<br>INFO  Start blogging <span class="hljs-keyword">with</span> Hexo!<br></code></pre></td></tr></table></figure><p>初始化之后会在当前目录创建 博客文件夹，文件夹中会存在以下目录及文件</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-built_in">config</span>.landscape.yml<br><span class="hljs-built_in">config</span>.yml<br>node modules  <span class="hljs-comment">#目录</span><br>package-lock.<span class="hljs-keyword">json</span><br><span class="hljs-keyword"></span>package.<span class="hljs-keyword">json</span><br><span class="hljs-keyword"></span><span class="hljs-keyword">scaffolds </span> <span class="hljs-comment">#目录</span><br>source  <span class="hljs-comment">#目录</span><br>themes  <span class="hljs-comment">#目录</span><br>yarn.lock<br></code></pre></td></tr></table></figure><h3 id="本地测试"><a href="#本地测试" class="headerlink" title="本地测试"></a>本地测试</h3><p>进入创建的 博客文件夹</p><p>cd tthourshexo  </p><p>创建文件</p><p>hexo new hexo_install</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">➜  tthourshexo hexo new hexo_install<br>INFO  Validating config<br>INFO  Created: ~/tthours/tthourshexo/source/_posts/hexo-install.md<br></code></pre></td></tr></table></figure><p>静态化处理</p><p>hexo g</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs routeros">➜  tthourshexo hexo g<br><span class="hljs-built_in">INFO</span>  Validating<span class="hljs-built_in"> config</span><br><span class="hljs-built_in"></span><span class="hljs-built_in">INFO</span>  Start processing<br><span class="hljs-built_in">INFO</span>  Files loaded <span class="hljs-keyword">in</span> 159 ms<br><span class="hljs-built_in">INFO</span>  Generated: index.html<br><span class="hljs-built_in">INFO</span>  Generated: archives/index.html<br><span class="hljs-built_in">INFO</span>  Generated: js/script.js<br><span class="hljs-built_in">INFO</span>  Generated: css/style.css<br><span class="hljs-built_in">INFO</span>  Generated: archives/2024/12/index.html<br><span class="hljs-built_in">INFO</span>  Generated: fancybox/jquery.fancybox.min.css<br><span class="hljs-built_in">INFO</span>  Generated: archives/2024/index.html<br><span class="hljs-built_in">INFO</span>  Generated: fancybox/jquery.fancybox.min.js<br><span class="hljs-built_in">INFO</span>  Generated: js/jquery-3.6.4.min.js<br><span class="hljs-built_in">INFO</span>  Generated: css/images/banner.jpg<br><span class="hljs-built_in">INFO</span>  Generated: 2024/12/15/hello-world/index.html<br><span class="hljs-built_in">INFO</span>  Generated: 2024/12/15/hexo-install/index.html<br><span class="hljs-built_in">INFO</span>  12 files generated <span class="hljs-keyword">in</span> 109 ms<br></code></pre></td></tr></table></figure><p>启动服务预览</p><p>hexo s</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">➜  tthourshexo hexo s<br><span class="hljs-keyword">INFO</span>  Validating config<br><span class="hljs-keyword">INFO</span>  <span class="hljs-keyword">Start</span> processing<br><span class="hljs-keyword">INFO</span>  Hexo <span class="hljs-keyword">is</span> running at http://localhost:<span class="hljs-number">4000</span>/ . Press Ctrl+C <span class="hljs-keyword">to</span> stop.<br></code></pre></td></tr></table></figure><p>本地测试</p><p><a href="http://localhost:4000/">http://localhost:4000/</a></p><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>在hexo选择主题<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p><p>在博客文件夹下安装</p><p>npm install –save hexo-theme-fluid</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs applescript">➜  tthourshexo npm install <span class="hljs-comment">--save hexo-theme-fluid</span><br><br>up <span class="hljs-keyword">to</span> <span class="hljs-built_in">date</span>, audited <span class="hljs-number">224</span> packages <span class="hljs-keyword">in</span> <span class="hljs-number">2</span>s<br><br><span class="hljs-number">24</span> packages are looking <span class="hljs-keyword">for</span> funding<br>  <span class="hljs-built_in">run</span> `npm fund` <span class="hljs-keyword">for</span> details<br><br>found <span class="hljs-number">0</span> vulnerabilities<br></code></pre></td></tr></table></figure><p>fluid主题</p><p><a href="https://github.com/fluid-dev/hexo-theme-fluid?tab=readme-ov-file">https://github.com/fluid-dev/hexo-theme-fluid?tab=readme-ov-file</a></p><h2 id="关联GitHub"><a href="#关联GitHub" class="headerlink" title="关联GitHub"></a>关联GitHub</h2><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><h4 id="修改默认配置文件"><a href="#修改默认配置文件" class="headerlink" title="修改默认配置文件"></a>修改默认配置文件</h4><p>根目录下默认的_config.yml</p><h5 id="修改site"><a href="#修改site" class="headerlink" title="修改site"></a>修改site</h5><p>默认值</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"># Site<br><span class="hljs-symbol">title:</span> Hexo<br><span class="hljs-symbol">subtitle:</span> <span class="hljs-comment">&#x27;&#x27;</span><br><span class="hljs-symbol">description:</span> <span class="hljs-comment">&#x27;&#x27;</span><br><span class="hljs-symbol">keywords:</span><br><span class="hljs-symbol">author:</span> John Doe<br><span class="hljs-symbol">language:</span> en<br><span class="hljs-symbol">timezone:</span> <span class="hljs-comment">&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p>修改后</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"># Site<br><span class="hljs-symbol">title:</span> Ten thousand hours<br><span class="hljs-symbol">subtitle:</span> <span class="hljs-comment">&#x27;Ten thousand hours&#x27;</span><br><span class="hljs-symbol">description:</span> <span class="hljs-comment">&#x27;Ten thousand hours&#x27;</span><br><span class="hljs-symbol">keywords:</span><br><span class="hljs-symbol">author:</span> tt<br><span class="hljs-symbol">language:</span> zh-CN<br><span class="hljs-symbol">timezone:</span> <span class="hljs-comment">&#x27;Asia/Shanghai&#x27;</span><br></code></pre></td></tr></table></figure><p>url: <a href="http://example.com/">http://example.com</a></p><p>修改为</p><p>url: <a href="https://tthours.github.io/">https://tthours.github.io</a></p><h5 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h5><p>theme: fluid</p><h5 id="修改环境"><a href="#修改环境" class="headerlink" title="修改环境"></a>修改环境</h5><p>原始</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs clean"># Deployment<br>## Docs: https:<span class="hljs-comment">//hexo.io/docs/one-command-deployment</span><br>deploy:<br>  type: <span class="hljs-string">&#x27;&#x27;</span><br>  <br></code></pre></td></tr></table></figure><p>修改后</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-params">deploy:</span><br>  <span class="hljs-params">type:</span> &#x27;git&#x27;<br>  <span class="hljs-params">repository:</span> git@tthoursgithub.com:tthours<span class="hljs-symbol">/tthours.github.io.git</span><br>  <span class="hljs-params">branch:</span> main<br></code></pre></td></tr></table></figure><h3 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h3><p>如果有安装对应的主题，就需要新建主题对应的配置文件，复制默认配置文件进行修改</p><p>例如：fluid主题，创建_config.fluid.yml</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-comment"># Hexo Configuration</span><br><span class="hljs-comment"># 用于浏览器标签的图标</span><br><span class="hljs-comment"># Icon for browser tab</span><br><span class="hljs-comment"># 注意必须是png后缀格式</span><br><span class="hljs-params">favicon:</span> <span class="hljs-symbol">/img/hd.png</span><br><br><span class="hljs-comment"># 用于苹果设备的图标</span><br><span class="hljs-comment"># Icon for Apple touch</span><br><span class="hljs-params">apple_touch_icon:</span> <span class="hljs-symbol">/img/hd.png</span><br><br><span class="hljs-comment"># 导航栏的相关配置</span><br><span class="hljs-comment"># Navigation bar</span><br><span class="hljs-params">navbar:</span><br>  <span class="hljs-comment"># 导航栏左侧的标题，为空则按 hexo config 中 `title` 显示</span><br>  <span class="hljs-comment"># The title on the left side of the navigation bar. If empty, it is based on `title` in hexo config</span><br>  <span class="hljs-params">blog_title:</span> <span class="hljs-string">&quot;10000hours&quot;</span><br><br><span class="hljs-params">index:</span><br>  <span class="hljs-params">slogan:</span><br>    <span class="hljs-params">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-params">text:</span> <span class="hljs-string">&quot;每个人都需要对自己的人生负责&quot;</span><br>    <span class="hljs-comment">#api:</span><br>    <span class="hljs-comment">#  enable: false</span><br>    <span class="hljs-comment">#  url: &quot;https://v1.hitokoto.cn/&quot;</span><br>    <span class="hljs-comment">#  method: &quot;GET&quot;</span><br>    <span class="hljs-comment">#  headers: &#123;&#125;</span><br>    <span class="hljs-comment">#  keys: [&quot;hitokoto&quot;]</span><br>  <span class="hljs-params">post_url_target:</span> _blank<br>  <span class="hljs-params">banner_img:</span> <span class="hljs-symbol">/img/hd.png</span><br><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># 文章页</span><br><span class="hljs-comment"># Post Page</span><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-params">post:</span><br>  <span class="hljs-params">banner_img:</span> <span class="hljs-symbol">/img/hd.png</span><br>  <span class="hljs-params">banner_img_height:</span> <span class="hljs-number">70</span><br><br><br>  <span class="hljs-params">updated:</span><br>    <span class="hljs-params">enable:</span> <span class="hljs-literal">true</span><br><br>    <span class="hljs-comment"># 格式参照 ISO-8601 日期格式化</span><br>    <span class="hljs-comment"># ISO-8601 date format</span><br>    <span class="hljs-comment"># See: http://momentjs.cn/docs/#/parsing/string-format/</span><br>    <span class="hljs-params">date_format:</span> <span class="hljs-string">&quot;LL a&quot;</span><br><br>    <span class="hljs-comment"># 是否使用相对时间表示，比如：&quot;3 天前&quot;</span><br>    <span class="hljs-comment"># If true, it will be a relative time, such as: &quot;3 days ago&quot;</span><br>    <span class="hljs-params">relative:</span> <span class="hljs-literal">true</span><br><br>    <span class="hljs-comment"># 提示标签类型</span><br>    <span class="hljs-comment"># Note class</span><br>    <span class="hljs-comment"># Options: default | primary | info | success | warning | danger | light</span><br>    <span class="hljs-params">note_class:</span> info<br>    <span class="hljs-comment"># 版权声明，会显示在每篇文章的结尾</span><br>  <span class="hljs-comment"># Copyright, will be displayed at the end of each post</span><br>  <span class="hljs-params">copyright:</span><br>    <span class="hljs-params">enable:</span> <span class="hljs-literal">true</span><br><br>    <span class="hljs-comment"># CreativeCommons license</span><br>    <span class="hljs-comment"># Options: BY | BY-SA | BY-ND | BY-NC | BY-NC-SA | BY-NC-ND</span><br>    <span class="hljs-params">license:</span> &#x27;BY TT&#x27;<br><br>    <span class="hljs-comment"># 显示作者</span><br>    <span class="hljs-params">author:</span><br>      <span class="hljs-params">enable:</span> <span class="hljs-literal">true</span><br><br>    <span class="hljs-comment"># 显示发布日期</span><br>    <span class="hljs-comment"># Show post date</span><br>    <span class="hljs-params">post_date:</span><br>      <span class="hljs-params">enable:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-params">format:</span> <span class="hljs-string">&quot;LL&quot;</span><br><br>    <span class="hljs-comment"># 显示更新日期</span><br>    <span class="hljs-comment"># Show update date</span><br>    <span class="hljs-params">update_date:</span><br>      <span class="hljs-params">enable:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-params">format:</span> <span class="hljs-string">&quot;LL&quot;</span><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># 归档页</span><br><span class="hljs-comment"># Archive Page</span><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-params">archive:</span><br>  <span class="hljs-params">banner_img:</span> <span class="hljs-symbol">/img/hd.png</span><br>  <span class="hljs-params">banner_img_height:</span> <span class="hljs-number">60</span><br>  <span class="hljs-params">banner_mask_alpha:</span> <span class="hljs-number">0.3</span><br><br><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># 分类页</span><br><span class="hljs-comment"># Category Page</span><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-params">category:</span><br>  <span class="hljs-params">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-params">banner_img:</span> <span class="hljs-symbol">/img/hd.png</span><br>  <span class="hljs-params">banner_img_height:</span> <span class="hljs-number">60</span><br>  <span class="hljs-params">banner_mask_alpha:</span> <span class="hljs-number">0.3</span><br><br>  <span class="hljs-comment"># 分类的排序字段，前面带减号是倒序，不带减号是正序</span><br>  <span class="hljs-comment"># Sort field for categories, with a minus sign is reverse order</span><br>  <span class="hljs-comment"># Options: length | name</span><br>  <span class="hljs-params">order_by:</span> <span class="hljs-string">&quot;-length&quot;</span><br><br>  <span class="hljs-comment"># 层级的折叠深度，0 是全部折叠，大于 0 后如果存在子分类则默认展开</span><br>  <span class="hljs-comment"># Collapse depth. If 0, all posts collapsed. If greater than 0, it will be expanded by default if there are subcategories</span><br>  <span class="hljs-params">collapse_depth:</span> <span class="hljs-number">0</span><br><br>  <span class="hljs-comment"># 文章的排序字段，前面带减号是倒序，不带减号是正序</span><br>  <span class="hljs-comment"># Sort field for posts, with a minus sign is reverse order</span><br>  <span class="hljs-comment"># Options: date | title | or other field of front-matter</span><br>  <span class="hljs-params">post_order_by:</span> <span class="hljs-string">&quot;-date&quot;</span><br><br>  <span class="hljs-comment"># 单个分类中折叠展示文章数的最大值，超过限制会显示 More，0 则不限制</span><br>  <span class="hljs-comment"># The maximum number of posts in a single category. If the limit is exceeded, it will be displayed More. If 0 no limit</span><br>  <span class="hljs-params">post_limit:</span> <span class="hljs-number">10</span><br><br><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># 标签页</span><br><span class="hljs-comment"># Tag Page</span><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-params">tag:</span><br>  <span class="hljs-params">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-params">banner_img:</span> <span class="hljs-symbol">/img/hd.png</span><br>  <span class="hljs-params">banner_img_height:</span> <span class="hljs-number">80</span><br>  <span class="hljs-params">banner_mask_alpha:</span> <span class="hljs-number">0.3</span><br>  <span class="hljs-params">tagcloud:</span><br>    <span class="hljs-params">min_font:</span> <span class="hljs-number">15</span><br>    <span class="hljs-params">max_font:</span> <span class="hljs-number">30</span><br>    <span class="hljs-params">unit:</span> px<br>    <span class="hljs-params">start_color:</span> <span class="hljs-string">&quot;#BBBBEE&quot;</span><br>    <span class="hljs-params">end_color:</span> <span class="hljs-string">&quot;#337ab7&quot;</span><br><br><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># 关于页</span><br><span class="hljs-comment"># About Page</span><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-params">about:</span><br>  <span class="hljs-params">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-params">banner_img:</span> <span class="hljs-symbol">/img/hd.png</span><br>  <span class="hljs-params">banner_img_height:</span> <span class="hljs-number">60</span><br>  <span class="hljs-params">banner_mask_alpha:</span> <span class="hljs-number">0.3</span><br>  <span class="hljs-params">avatar:</span> <span class="hljs-symbol">/img/hd.png</span><br>  <span class="hljs-params">name:</span> <span class="hljs-string">&quot;TT&quot;</span><br>  <span class="hljs-params">intro:</span> <span class="hljs-string">&quot;TT&quot;</span><br>  <span class="hljs-comment"># 更多图标可从 https://hexo.fluid-dev.com/docs/icon/ 查找，`class` 代表图标的 css class，添加 `qrcode` 后，图标不再是链接而是悬浮二维码</span><br>  <span class="hljs-comment"># More icons can be found from https://hexo.fluid-dev.com/docs/en/icon/  `class` is the css class of the icon. If adding `qrcode`, The icon is no longer a link, but a hovering QR code</span><br>  <span class="hljs-params">icons:</span><br>    <span class="hljs-operator">-</span> &#123; <span class="hljs-params">class:</span> <span class="hljs-string">&quot;iconfont icon-github-fill&quot;</span>, <span class="hljs-params">link:</span> <span class="hljs-string">&quot;https://github.com&quot;</span>, <span class="hljs-params">tip:</span> <span class="hljs-string">&quot;GitHub&quot;</span> &#125;<br>    <span class="hljs-operator">-</span> &#123; <span class="hljs-params">class:</span> <span class="hljs-string">&quot;iconfont icon-douban-fill&quot;</span>, <span class="hljs-params">link:</span> <span class="hljs-string">&quot;https://douban.com&quot;</span>, <span class="hljs-params">tip:</span> <span class="hljs-string">&quot;豆瓣&quot;</span> &#125;<br>    <span class="hljs-operator">-</span> &#123; <span class="hljs-params">class:</span> <span class="hljs-string">&quot;iconfont icon-wechat-fill&quot;</span>, <span class="hljs-params">qrcode:</span> <span class="hljs-string">&quot;/img/favicon.png&quot;</span> &#125;<br></code></pre></td></tr></table></figure><h3 id="安装部署工具"><a href="#安装部署工具" class="headerlink" title="安装部署工具"></a>安装部署工具</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br><br></code></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">➜  tthourshexo npm <span class="hljs-keyword">install </span>hexo-deployer-git --save<br><br><br><span class="hljs-keyword">added </span><span class="hljs-number">9</span> packages, <span class="hljs-keyword">and </span>audited <span class="hljs-number">233</span> packages in <span class="hljs-number">4</span>s<br><br><span class="hljs-number">30</span> packages are looking for funding<br>  run `npm fund` for details<br><br>found <span class="hljs-number">0</span> vulnerabilities<br></code></pre></td></tr></table></figure><h2 id="静态化文件"><a href="#静态化文件" class="headerlink" title="静态化文件"></a>静态化文件</h2><p>hexo g</p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>hexo d</p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>code_repo_reinforce</title>
    <link href="/2024/03/15/security/codesec/code_repo_reinforce/"/>
    <url>/2024/03/15/security/codesec/code_repo_reinforce/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>github 为了安全性需要禁止上传敏感内容，所以需要.gitignore 文件来设置哪些文件不需要上传进行版本管理</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">/dir/</span> 过滤整个文件夹<br>*<span class="hljs-string">.txt</span> 过滤所有<span class="hljs-string">.txt</span>文件<br><span class="hljs-string">/dir/config.php</span> 过滤具体文件<br></code></pre></td></tr></table></figure><p><img src="/image-20241224171307321.png" alt="image-20241224171307321"></p><p>说明：</p><p>过滤掉的文件不会上传，也就是说不会进行版本管理，本地还是会有的</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">/ 开头表示目录<br>* 通配多个字符<br>? 通配单个字符<br><span class="hljs-string">[]</span> 包含单个字符的匹配列表<br>! 表示不忽略匹配的文件或者目录，也就是会上传<br></code></pre></td></tr></table></figure><p>规则匹配策略：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">自上到下进行匹配<br></code></pre></td></tr></table></figure><h2 id="错误总结"><a href="#错误总结" class="headerlink" title="错误总结"></a>错误总结</h2><p>1、不生效原因</p><p>可能是已经在缓存中，清除缓存，重新上传</p><p>git rm -r –cached .</p>]]></content>
    
    
    <categories>
      
      <category>security</category>
      
      <category>codesec</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>codesec</tag>
      
      <tag>安全加固</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
